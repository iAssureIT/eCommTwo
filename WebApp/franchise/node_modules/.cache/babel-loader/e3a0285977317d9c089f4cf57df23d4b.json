{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/chart1.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport './Chart.css';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nexport default class Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'year': \"FY 2019 - 2020\",\n      \"years\": [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"],\n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\": [],\n      \"annualPlanFamilyUpgradation\": [],\n      \"annualPlanReach\": [],\n      \"sector\": [],\n      \"tableHeading\": {\n        name: \"Sector\",\n        annualPlan_Reach: \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation: \"anPlan_FamilyUpg\",\n        achievement_Reach: \"achie_Reach\",\n        achievement_FamilyUpgradation: \"achie_FamilyUpg\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getSourceData(this.state.year, this.state.center_ID);\n    var ctx = document.getElementById('myChart');\n    var data = {\n      datasets: [{\n        data: [30, 40, 20, 10],\n        backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)'],\n        hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)']\n      }],\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: ['New', 'Dispatched', 'Pending', 'Returned']\n    };\n    var myPieChart = new Chart(ctx, {\n      type: 'pie',\n      data: data\n    });\n    var ctx4 = document.getElementById('myBarChart2');\n    var data4 = {\n      datasets: [{\n        data: [20, 40, 30, 80],\n        backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)']\n      }],\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: ['Area 1', 'Area 2', 'Area 3', 'Area 4']\n    };\n    var myBarChart2 = new Chart(ctx4, {\n      type: 'horizontalBar',\n      data: data4\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getSourceData(this.state.year, this.state.center_ID);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => {});\n  }\n\n  getAvailableCenters() {\n    axios({\n      method: 'get',\n      url: '/api/centers/list'\n    }).then(response => {\n      this.setState({\n        availableCenters: response.data,\n        center: response.data[0].centerName + '|' + response.data[0]._id\n      }, () => {\n        var center_ID = this.state.center.split('|')[1];\n        this.setState({\n          center_ID: center_ID\n        }, () => {\n          this.getData(this.state.year, this.state.center_ID);\n          this.getSourceData(this.state.year, this.state.center_ID);\n        });\n      });\n    }).catch(function (error) {});\n  }\n\n  selectCenter(event) {\n    var selectedCenter = event.target.value;\n    this.setState({\n      [event.target.name]: event.target.value,\n      selectedCenter: selectedCenter\n    }, () => {\n      var center_ID = this.state.selectedCenter.split('|')[1];\n      this.setState({\n        center_ID: center_ID\n      }, () => {\n        this.getData(this.state.year, this.state.center_ID);\n        this.getSourceData(this.state.year, this.state.center_ID);\n      });\n    });\n  }\n\n  getData(year, center_ID) {\n    if (year) {\n      var startDate = year.substring(3, 7) + \"-04-01\";\n      var endDate = year.substring(10, 15) + \"-03-31\";\n\n      if (startDate, endDate, center_ID) {\n        axios.get('/api/report/sector/' + startDate + '/' + endDate + '/' + center_ID).then(response => {\n          var sector = [];\n          var annualPlanReach = [];\n          var annualPlanFamilyUpgradation = [];\n          var achievementReach = [];\n          var achievementFamilyUpgradation = [];\n\n          if (response.data && response.data.length > 0) {\n            response.data.map((data, index) => {\n              sector.push(data.name);\n              annualPlanReach.push(data.annualPlan_Reach);\n              annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n              achievementReach.push(data.achievement_Reach);\n              achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);\n            });\n            this.setState({\n              \"sector\": sector.splice(-2),\n              \"annualPlanReach1\": annualPlanReach.splice(-2),\n              \"annualPlanFamilyUpgradation1\": annualPlanFamilyUpgradation.splice(-2),\n              \"achievementReach1\": achievementReach.splice(-2),\n              \"achievementFamilyUpgradation1\": achievementFamilyUpgradation.splice(-2)\n            }, () => {\n              this.setState({\n                \"sector\": sector,\n                \"annualPlanReach\": annualPlanReach,\n                \"annualPlanFamilyUpgradation\": annualPlanFamilyUpgradation,\n                \"achievementReach\": achievementReach,\n                \"achievementFamilyUpgradation\": achievementFamilyUpgradation\n              });\n            });\n          }\n\n          var tableData = response.data.map((a, i) => {\n            return {\n              name: a.name,\n              annualPlan_Reach: a.annualPlan_Reach,\n              annualPlan_FamilyUpgradation: a.annualPlan_FamilyUpgradation,\n              achievement_Reach: a.achievement_Reach,\n              achievement_FamilyUpgradation: a.achievement_FamilyUpgradation\n            };\n          });\n          this.setState({\n            tableData: tableData\n          }, () => {});\n        }).catch(function (error) {});\n      }\n    }\n  }\n\n  getSourceData(year, center_ID) {\n    var startDate = year.substring(3, 7) + \"-04-01\";\n    var endDate = year.substring(10, 15) + \"-03-31\";\n\n    if (startDate, endDate, center_ID) {\n      axios.get('/api/report/source/' + startDate + '/' + endDate + '/' + center_ID).then(response => {\n        this.setState({\n          sourceData: response.data\n        }, () => {});\n      }).catch(function (error) {});\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \"Center\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"center\",\n      name: \"center\",\n      value: this.state.center,\n      onChange: this.selectCenter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, \"-- Select --\"), this.state.availableCenters && this.state.availableCenters.length > 0 ? this.state.availableCenters.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: data._id,\n        value: data.centerName + '|' + data._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 31\n        }\n      }, data.centerName);\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 56\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 18\n      }\n    }, \"-- Select Year --\"), this.state.years.map((data, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 28\n        }\n      }, data);\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      annualPlanReach: this.state.annualPlanReach,\n      sector: this.state.sector,\n      annualPlanFamilyUpgradation: this.state.annualPlanFamilyUpgradation,\n      achievementReach: this.state.achievementReach,\n      achievementFamilyUpgradation: this.state.achievementFamilyUpgradation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IAssureTable, {\n      getData: this.getData.bind(this),\n      tableHeading: this.state.tableHeading,\n      tableData: this.state.tableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped  table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"tableHeader tableHeader20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 23\n      }\n    }, \" source \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 23\n      }\n    }, \" annualPlan\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 23\n      }\n    }, \" cum_monthly \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, \"cum_achi \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 23\n      }\n    }, \" per_cum_achi \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 23\n      }\n    }, \" monthlyPlan\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }, \" achi_month\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 23\n      }\n    }, \" per_achi\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box1a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, \"Order Dispatch Summary\"), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      style: {\n        paddingLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box1a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }, \"Areawise Customer Distribution (IN NOS) \"), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myBarChart2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/chart1.js"],"names":["React","Component","moment","$","axios","render","html2canvas","Chart","BarChart","IAssureTable","Charts","constructor","props","state","name","annualPlan_Reach","annualPlan_FamilyUpgradation","achievement_Reach","achievement_FamilyUpgradation","componentDidMount","defaults","headers","common","localStorage","getItem","getAvailableCenters","getData","year","center_ID","getSourceData","ctx","document","getElementById","data","datasets","backgroundColor","hoverBackgroundColor","labels","myPieChart","type","ctx4","data4","myBarChart2","componentWillReceiveProps","nextProps","handleChange","event","preventDefault","setState","target","value","method","url","then","response","availableCenters","center","centerName","_id","split","catch","error","selectCenter","selectedCenter","startDate","substring","endDate","get","sector","annualPlanReach","annualPlanFamilyUpgradation","achievementReach","achievementFamilyUpgradation","length","map","index","push","splice","tableData","a","i","sourceData","bind","years","tableHeading","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component }                                  from 'react';\nimport moment               from 'moment';\nimport $                                                     from 'jquery';\nimport axios                                                 from 'axios';\nimport { render } from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport './Chart.css';\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\n\nexport default class Charts extends Component{\n  \n  constructor(props) {\n   super(props);\n    this.state = {\n      'year'                        : \"FY 2019 - 2020\",\n      \"years\"                       :[\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"],      \n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\"            : [],\n      \"annualPlanFamilyUpgradation\" : [],\n      \"annualPlanReach\"             : [],\n      \"sector\"                      : [],\n      \"tableHeading\"                : {\n        name                                    : \"Sector\",\n        annualPlan_Reach                        : \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation            : \"anPlan_FamilyUpg\",    \n        achievement_Reach                       : \"achie_Reach\",\n        achievement_FamilyUpgradation           : \"achie_FamilyUpg\",            \n               \n      },\n\n\n    }\n  }\n  \n  componentDidMount(){\n    axios.defaults.headers.common['Authorization'] = 'Bearer '+ localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getSourceData(this.state.year, this.state.center_ID);\n\n  \n    var ctx = document.getElementById('myChart');\n    var data = {\n      datasets: [{\n          data: [30, 40, 20, 10],\n          backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n                'rgba(255, 206, 86, 0.5)',\n                'rgba(75, 192, 192, 0.5)',\n            ],\n           hoverBackgroundColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                ],\n\n           \n      }],\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: [\n          'New',\n          'Dispatched',\n          'Pending',\n          'Returned'\n      ]\n    };\n    var myPieChart = new Chart(ctx, {\n      type: 'pie',\n      data: data,\n    });\n\n\n    var ctx4 = document.getElementById('myBarChart2');\n    var data4 = {\n      datasets: [\n                {\n                    data: [20, 40, 30, 80],\n\n          backgroundColor: [\n                'rgba(255, 99, 132, 0.5)',\n                'rgba(54, 162, 235, 0.5)',\n                'rgba(255, 206, 86, 0.5)',\n                'rgba(75, 192, 192, 0.5)',\n            ],\n                }\n                ],\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: [\n          'Area 1',\n          'Area 2',\n          'Area 3',\n          'Area 4'\n      ]\n    };\n\n    var myBarChart2 = new Chart(ctx4, {\n        type: 'horizontalBar',\n        data: data4,  \n    });\n  }\n\n  \n    componentWillReceiveProps(nextProps){\n      this.getAvailableCenters();\n      this.getData(this.state.year, this.state.center_ID);\n      this.getSourceData(this.state.year, this.state.center_ID);\n    }\n    handleChange(event){\n        event.preventDefault();\n        this.setState({\n          [event.target.name] : event.target.value\n        },()=>{\n        });\n    }\n    getAvailableCenters(){\n        axios({\n          method: 'get',\n          url: '/api/centers/list',\n        }).then((response)=> {\n          this.setState({\n            availableCenters : response.data,\n            center           : response.data[0].centerName+'|'+response.data[0]._id\n          },()=>{\n            var center_ID = this.state.center.split('|')[1];\n            this.setState({\n              center_ID        : center_ID\n            },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getSourceData(this.state.year, this.state.center_ID);\n            })\n          })\n        }).catch(function (error) {\n        });\n    } \n    selectCenter(event){\n        var selectedCenter = event.target.value;\n        this.setState({\n          [event.target.name] : event.target.value,\n          selectedCenter : selectedCenter,\n        },()=>{\n          var center_ID = this.state.selectedCenter.split('|')[1];\n          this.setState({\n            center_ID :center_ID,            \n          },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getSourceData(this.state.year, this.state.center_ID);\n          })\n        });\n    } \n\n  getData(year, center_ID){\n    if(year){\n    var startDate = year.substring(3, 7)+\"-04-01\";\n    var endDate = year.substring(10, 15)+\"-03-31\";\n    if(startDate, endDate, center_ID){\n        axios.get('/api/report/sector/'+startDate+'/'+endDate+'/'+center_ID)\n        .then((response)=>{\n\n          var sector = [];\n          var annualPlanReach = [];\n          var annualPlanFamilyUpgradation = [];\n          var achievementReach = [];\n          var achievementFamilyUpgradation = [];\n         if(response.data&&response.data.length >0){\n            response.data.map((data,index)=>{\n              sector.push(data.name);\n              annualPlanReach.push(data.annualPlan_Reach);\n              annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n              achievementReach.push(data.achievement_Reach);\n              achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);\n            })\n          this.setState({\n            \"sector\" : sector.splice(-2),\n            \"annualPlanReach1\" : annualPlanReach.splice(-2),\n            \"annualPlanFamilyUpgradation1\" : annualPlanFamilyUpgradation.splice(-2),\n            \"achievementReach1\" : achievementReach.splice(-2),\n            \"achievementFamilyUpgradation1\" : achievementFamilyUpgradation.splice(-2),\n          },()=>{\n          this.setState({\n            \"sector\" : sector,\n            \"annualPlanReach\" : annualPlanReach,\n            \"annualPlanFamilyUpgradation\" : annualPlanFamilyUpgradation,\n            \"achievementReach\" : achievementReach,\n            \"achievementFamilyUpgradation\" : achievementFamilyUpgradation,\n          });\n        \n          })\n        }    \n          var tableData = response.data.map((a, i)=>{\n            return {\n                name                                    : a.name,\n                annualPlan_Reach                        : a.annualPlan_Reach,\n                annualPlan_FamilyUpgradation            : a.annualPlan_FamilyUpgradation, \n                achievement_Reach                       : a.achievement_Reach,\n                achievement_FamilyUpgradation           : a.achievement_FamilyUpgradation,            \n            } \n        })  \n        this.setState({\n          tableData : tableData\n        },()=>{\n        })\n      })\n      .catch(function(error){        \n      });\n    }\n  }\n}\n  getSourceData(year, center_ID){\n    var startDate = year.substring(3, 7)+\"-04-01\";\n    var endDate = year.substring(10, 15)+\"-03-31\";\n    if(startDate, endDate, center_ID){\n        axios.get('/api/report/source/'+startDate+'/'+endDate+'/'+center_ID)\n        .then((response)=>{\n        \n        this.setState({\n          sourceData : response.data\n        },()=>{\n        })\n       })\n      .catch(function(error){        \n      });\n    }\n  }\n\n  render(){ \n    \n    return(\n      <div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\">\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                <label className=\"formLable\">Center</label><span className=\"asterix\"></span>\n                <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"center\" >\n                    <select className=\"custom-select form-control inputBox\" ref=\"center\" name=\"center\" value={this.state.center} onChange={this.selectCenter.bind(this)} >\n                        <option className=\"hidden\" >-- Select --</option>\n                        {\n                          this.state.availableCenters && this.state.availableCenters.length >0 ?\n                          this.state.availableCenters.map((data, index)=>{\n                            return(\n                              <option key={data._id} value={data.centerName+'|'+data._id}>{data.centerName}</option>\n                            );\n                          })\n                          :\n                          null\n                        }\n                    </select>\n                </div>\n            </div>\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <label className=\"formLable\">Year</label><span className=\"asterix\"></span>\n              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"year\" >\n                <select className=\"custom-select form-control inputBox\" ref=\"year\" name=\"year\" value={this.state.year}  onChange={this.handleChange.bind(this)} >\n                 <option className=\"hidden\" >-- Select Year --</option>\n                 {\n                  this.state.years.map((data, i)=>{\n                    return <option key={i}>{data}</option>\n                  })\n                 }\n                </select>\n              </div>\n            </div>  \n        </div>  \n        <div className=\"col-lg-6\">\n          <BarChart annualPlanReach={this.state.annualPlanReach} sector={this.state.sector} annualPlanFamilyUpgradation={this.state.annualPlanFamilyUpgradation} achievementReach={this.state.achievementReach} achievementFamilyUpgradation={this.state.achievementFamilyUpgradation}/>\n        </div>\n        <div className=\"col-lg-6\">\n        <IAssureTable \n         \n          getData={this.getData.bind(this)} \n          tableHeading={this.state.tableHeading} \n          tableData={this.state.tableData} \n          />\n  \n        </div>\n      <div className=\"row\">\n        <div className=\"col-lg-12\">     \n          <table className=\"table table-striped  table-hover\" >\n                  <thead>\n                    <tr className=\"tableHeader tableHeader20\">\n                      <th> source </th>\n                      <th> annualPlan</th>\n                      <th> cum_monthly </th>\n                      <th>cum_achi </th>\n                      <th> per_cum_achi </th>\n                      <th> monthlyPlan</th>\n                      <th> achi_month</th>\n                      <th> per_achi</th>\n                    </tr>                    \n                  </thead>\n                \n                </table>\n                  </div>\n              </div>\n\n        <div className=\"row\">\n        <div className=\"col-lg-12\">\n            <div className=\"col-lg-6\">\n              <div className=\"box2\">\n                  <div className=\"box1a\">\n                    <h4>Order Dispatch Summary</h4>\n                    <canvas id=\"myChart\"></canvas>\n                  </div>\n              </div>\n            </div> \n          <div className=\"col-lg-6\" style={{paddingLeft:'0px'}}>\n            <div className=\"box2\">\n                <div className=\"box1a\">\n                  <h4>Areawise Customer Distribution (IN NOS) </h4>\n                  <canvas id=\"myBarChart2\"></canvas>\n                </div>\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>  \n        <br/>\n        \n      </div>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}