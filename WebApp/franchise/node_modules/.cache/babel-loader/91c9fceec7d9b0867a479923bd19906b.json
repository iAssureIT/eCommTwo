{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/categoryWiseReports/MonthlyReport.js\";\nimport React, { Component } from 'react';\nimport IAssureTable from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nexport default class MonthlyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"twoLevelHeader\": {\n        apply: false\n      },\n      \"tableHeading\": {\n        orderID: \"Order ID\",\n        cratedAt: \"Order Date\",\n        userFullName: \"Customer Name\",\n        totalAmount: \"Amount\",\n        deliveryStatus: \"Delivery Status\"\n      },\n      \"tableData\": [],\n      \"tableObjects\": {\n        apiLink: '/api/annualPlans/',\n        editUrl: '/Plan/',\n        paginationApply: true\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      fields: {},\n      errors: {},\n      selectedYearMonth: '',\n      selectedMonth: '',\n      startDate: '',\n      endDate: '',\n      dataCount: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/sections/get/list/\").then(response => {\n      this.setState({\n        sections: response.data\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n    this.setState({\n      selectedYearMonth: moment().format('Y') + '-' + moment().format('M'),\n      startDate: moment().startOf('month').format('YYYY-MM-DD'),\n      endDate: moment().endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      var formValues = {\n        \"startTime\": this.state.startDate,\n        \"endTime\": this.state.endDate,\n        \"section\": null,\n        \"category\": null,\n        \"subcategory\": null\n      };\n      this.setState({\n        formValues: formValues\n      }, () => {\n        this.getCount();\n      });\n      this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, null, null);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reportData) {\n      this.setState({\n        reportData: nextProps.reportData\n      });\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  getCount() {\n    axios.post(\"/api/orders/get/category-wise-report-count\", this.state.formValues).then(response => {\n      this.setState({\n        dataCount: response.data.dataCount\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getData(startDate, endDate, startRange, limitRange, section, category, subcategory) {\n    var formValues = {\n      \"startTime\": startDate,\n      \"endTime\": endDate,\n      \"section\": section,\n      \"category\": category,\n      \"subcategory\": subcategory\n    };\n    this.setState({\n      formValues: formValues\n    }, () => {\n      this.getTableData(startRange, limitRange);\n    });\n  }\n\n  getTableData(startRange, limitRange) {\n    axios.post(\"/api/orders/get/category-wise-report/\" + startRange + '/' + limitRange, this.state.formValues).then(response => {\n      this.setState({\n        tableData: response.data\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  previousMonth(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).subtract(1, 'month').startOf('month').format('YYYY-MM-DD');\n    this.setState({\n      selectedYearMonth: moment(startDate).format('Y') + '-' + moment(startDate).format('M'),\n      startDate: startDate,\n      endDate: moment(startDate).endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), $('#subcategory').val());\n    });\n  }\n\n  nextMonth(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).add(1, 'months').startOf('month').format('YYYY-MM-DD');\n    this.setState({\n      selectedYearMonth: moment(startDate).format('Y') + '-' + moment(startDate).format('M'),\n      startDate: startDate,\n      endDate: moment(startDate).endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), $('#subcategory').val());\n    });\n  }\n\n  handleSection(event) {\n    this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, event.target.value, null, null);\n    axios.get(\"/api/category/get/list/\" + event.target.value).then(response => {\n      this.setState({\n        categories: response.data\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  handleCategory(event) {\n    this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), event.target.value, null);\n    axios.get(\"/api/category/get/one/\" + event.target.value).then(response => {\n      this.setState({\n        subcategories: response.data.subCategory\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  handleSubCategory(event) {\n    event.preventDefault();\n    this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), event.target.value);\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    if (!this.props.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 sales-report-main-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxmain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxsec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, \"Monthly Reports\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.previousMonth.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-left\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 151\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChange,\n        value: this.state.selectedYearMonth,\n        name: \"inputmonthlyValue\",\n        type: \"text\",\n        className: \"inputmonthlyValue reportsDateRef form-control\",\n        placeholder: \"\",\n        \"aria-label\": \"Brand\",\n        \"aria-describedby\": \"basic-addon1\",\n        ref: \"inputmonthlyValue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.nextMonth.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-right\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 147\n        }\n      }))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-3 col-md-3 col-sm-3 col-xs-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, \"Section\"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"section\",\n        className: \"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        ref: \"section\",\n        name: \"section\",\n        onChange: this.handleSection.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 27\n        }\n      }, \"-- Select --\"), this.state.sections && this.state.sections.map((data, index) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 38\n          }\n        }, data.section);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-3 col-md-3 col-sm-3 col-xs-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"category\",\n        className: \"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        ref: \"category\",\n        name: \"category\",\n        onChange: this.handleCategory.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 27\n        }\n      }, \"-- Select --\"), this.state.categories && this.state.categories.map((data, index) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 38\n          }\n        }, data.category);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-3 col-md-3 col-sm-3 col-xs-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"Subcategory\"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"subcategory\",\n        className: \"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        ref: \"subcategory\",\n        name: \"subcategory\",\n        onChange: this.handleSubCategory.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }\n      }, \"-- Select --\"), this.state.subcategories && this.state.subcategories.map((data, index) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: data._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 38\n          }\n        }, data.subCategoryTitle);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row tablebg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IAssureTable, {\n        tableHeading: this.state.tableHeading,\n        twoLevelHeader: this.state.twoLevelHeader,\n        dataCount: this.state.dataCount,\n        tableData: this.state.tableData,\n        getData: this.getTableData.bind(this),\n        tableObjects: this.state.tableObjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"ldrImageforbulk\",\n        src: \"/images/Loadersglms.gif\",\n        alt: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 110\n        }\n      }));\n    }\n  }\n\n} // export default MonthlyListContainer = withTracker(props =>{\n//     var monthDateFromSess = Session.get(\"selectedMonth\");\n//     var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));\n//     var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsMonthlyList);","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/categoryWiseReports/MonthlyReport.js"],"names":["React","Component","IAssureTable","moment","$","axios","MonthlyReport","constructor","props","state","apply","orderID","cratedAt","userFullName","totalAmount","deliveryStatus","apiLink","editUrl","paginationApply","fields","errors","selectedYearMonth","selectedMonth","startDate","endDate","dataCount","handleChange","bind","componentDidMount","get","then","response","setState","sections","data","catch","error","console","log","format","startOf","endOf","formValues","getCount","getData","startRange","limitRange","componentWillReceiveProps","nextProps","reportData","event","preventDefault","target","name","value","post","section","category","subcategory","getTableData","tableData","previousMonth","subtract","val","nextMonth","add","handleSection","categories","handleCategory","subcategories","subCategory","handleSubCategory","getSearchText","searchText","render","loading","map","index","_id","subCategoryTitle","tableHeading","twoLevelHeader","tableObjects"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IAssureTable           from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios                  from 'axios';\n\n\nexport default class MonthlyReport extends Component{\n\tconstructor(props){\n        super(props);\n        this.state = {\n           \"twoLevelHeader\"     : {\n            apply               : false,\n          },\n          \"tableHeading\"        : {\n            orderID                    : \"Order ID\",\n            cratedAt                   : \"Order Date\",\n            userFullName               : \"Customer Name\",\n            totalAmount                : \"Amount\",\n            deliveryStatus             : \"Delivery Status\",\n\n          },\n          \"tableData\"           : [],\n          \"tableObjects\"        : {\n            apiLink             : '/api/annualPlans/',\n            editUrl             : '/Plan/',\n            paginationApply     : true,\n          },\n          \"startRange\"          : 0,\n          \"limitRange\"          : 10,\n          fields                : {},\n          errors                : {},\n          selectedYearMonth     : '',\n          selectedMonth         : '',\n          startDate             : '',\n          endDate               : '',\n          dataCount             : 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n\n    componentDidMount(){\n        \n        axios.get(\"/api/sections/get/list/\")\n        .then((response)=>{\n          this.setState({ sections : response.data })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n\n        this.setState({ \n            selectedYearMonth : moment().format('Y')+'-'+moment().format('M'),\n            startDate   : moment().startOf('month').format('YYYY-MM-DD'),\n            endDate     : moment().endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            var formValues={\n                \"startTime\" : this.state.startDate,\n                \"endTime\"   : this.state.endDate,\n                \"section\"   : null,\n                \"category\"  : null,\n                \"subcategory\" : null\n              }\n            this.setState({ formValues : formValues} ,()=>{ this.getCount();  }); \n            this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange,null, null )    \n        })  \n        \n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.reportData){\n            this.setState({\n                reportData : nextProps.reportData\n            });\n        }\n    }\n    handleChange(event){\n    event.preventDefault();\n       const target = event.target;\n       const name = target.name;\n\n       this.setState({\n           [name] : event.target.value,\n       });\n    }\n    getCount(){\n        axios.post(\"/api/orders/get/category-wise-report-count\", this.state.formValues)\n        .then((response)=>{\n          this.setState({ \n            dataCount : response.data.dataCount\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    getData(startDate,endDate, startRange,limitRange, section, category, subcategory){\n        var formValues={\n          \"startTime\" : startDate,\n          \"endTime\"   : endDate,\n          \"section\"   : section,\n          \"category\"  : category,\n          \"subcategory\" : subcategory\n        }\n        this.setState({formValues : formValues},()=>{\n            this.getTableData(startRange,limitRange);\n        });  \n    }\n    getTableData(startRange,limitRange){\n      axios.post(\"/api/orders/get/category-wise-report/\"+startRange+'/'+limitRange,this.state.formValues)\n            .then((response)=>{\n              this.setState({ \n                tableData : response.data\n              })\n            })\n            .catch((error)=>{\n                console.log('error', error);\n            })\n    }\n\tpreviousMonth(event){\n\t\tevent.preventDefault();\n        var startDate = moment(this.state.startDate).subtract(1, 'month').startOf('month').format('YYYY-MM-DD');\n        \n\t\tthis.setState({\n            selectedYearMonth : moment(startDate).format('Y')+'-'+moment(startDate).format('M'),\n            startDate   : startDate,\n            endDate     : moment(startDate).endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), $('#subcategory').val() )    \n        }) \n\t}\n\n\tnextMonth(event){\n\t\tevent.preventDefault();\n        var startDate = moment(this.state.startDate).add(1, 'months').startOf('month').format('YYYY-MM-DD');\n        \n        this.setState({\n            selectedYearMonth : moment(startDate).format('Y')+'-'+moment(startDate).format('M'),\n            startDate   : startDate,\n            endDate     : moment(startDate).endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), $('#subcategory').val() )    \n        }) \n\t }\n    handleSection(event){\n      this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, event.target.value, null, null);\n        axios.get(\"/api/category/get/list/\"+event.target.value)\n        .then((response)=>{\n          this.setState({ \n            categories : response.data\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    handleCategory(event){\n        this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), event.target.value, null);\n        axios.get(\"/api/category/get/one/\"+event.target.value)\n        .then((response)=>{\n          this.setState({ \n            subcategories : response.data.subCategory\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    handleSubCategory(event){ \n      event.preventDefault();\n      this.getData(this.state.startDate, this.state.endDate, this.state.startRange, this.state.limitRange, $('#section').val(), $('#category').val(), event.target.value);\n    }\n    getSearchText(searchText, startRange, limitRange){\n        this.setState({\n            tableData : []\n        });\n    }\n    render(){\n        if(!this.props.loading){\n            return( \n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 sales-report-main-class\">\n                    <div className=\"reports-select-date-boxmain\">\n                        <div className=\"reports-select-date-boxsec\">\n                            <div className=\"reports-select-date-Title\">Monthly Reports</div>\n                            <div className=\"input-group\">\n                                <span onClick={this.previousMonth.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i></span>\n                                <input onChange={this.handleChange}  value={this.state.selectedYearMonth} name=\"inputmonthlyValue\" type=\"text\" className=\"inputmonthlyValue reportsDateRef form-control\" placeholder=\"\" aria-label=\"Brand\" aria-describedby=\"basic-addon1\" ref=\"inputmonthlyValue\"  />\n                                <span onClick={this.nextMonth.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                      <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                        <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\">Section \n                        </label>\n                        <select id=\"section\" className=\"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\" \n                          ref=\"section\" name=\"section\" onChange={this.handleSection.bind(this)} >\n                          <option selected={true} disabled={true}>-- Select --</option>\n                          {\n                            this.state.sections && this.state.sections.map((data,index)=>{\n                              return(<option value={data._id}>{data.section}</option>);\n                            })\n                          }\n                        </select>\n                      </div>\n                      <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                        <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\">Category \n                        </label>\n                        <select id=\"category\" className=\"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\" \n                          ref=\"category\" name=\"category\" onChange={this.handleCategory.bind(this)} >\n                          <option selected={true} disabled={true}>-- Select --</option>\n                          {\n                            this.state.categories && this.state.categories.map((data,index)=>{\n                              return(<option value={data._id}>{data.category}</option>);\n                            })\n                          }\n                        </select>\n                      </div>\n                      <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                        <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\">Subcategory \n                        </label>\n                        <select id=\"subcategory\" className=\"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\" \n                          ref=\"subcategory\" name=\"subcategory\" onChange={this.handleSubCategory.bind(this)} >\n                          <option selected={true} disabled={true}>-- Select --</option>\n                          {\n                            this.state.subcategories && this.state.subcategories.map((data,index)=>{\n                              return(<option value={data._id}>{data.subCategoryTitle}</option>);\n                            })\n                          }\n                        </select>\n                      </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\">\n                      <div className=\"row tablebg\">  \n                        <IAssureTable \n                            tableHeading={this.state.tableHeading}\n                            twoLevelHeader={this.state.twoLevelHeader} \n                            dataCount={this.state.dataCount}\n                            tableData={this.state.tableData}\n                            getData={this.getTableData.bind(this)}\n                            tableObjects={this.state.tableObjects}\n                        />\n                      </div>  \n                    </div>\n                </div>            \n            );\n        }else{\n            return(\n                <div className=\"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\"><img className=\"ldrImageforbulk\" src=\"/images/Loadersglms.gif\" alt=\"loading\"/></div>\n            );\n        } \n    }\n}\n// export default MonthlyListContainer = withTracker(props =>{\n//     var monthDateFromSess = Session.get(\"selectedMonth\");\n//     var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));\n//     var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsMonthlyList);"]},"metadata":{},"sourceType":"module"}