{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/chart.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport PieChart from './PieChart.js';\nimport CenterWisePieChart from './CenterWisePieChart.js';\nimport './Chart.css';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nexport default class Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'year': \"FY 2019 - 2020\",\n      \"years\": [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"],\n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\": [],\n      \"annualPlanFamilyUpgradation\": [],\n      \"annualPlanReach\": [],\n      \"sector\": [],\n      piechartcolor: [],\n      \"tableHeading\": {\n        name: \"Sector\",\n        annualPlan_Reach: \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation: \"anPlan_FamilyUpg\",\n        achievement_Reach: \"achie_Reach\",\n        achievement_FamilyUpgradation: \"achie_FamilyUpg\",\n        annualPlan_TotalBudget: \"annualPlan_TotalBudget\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => {});\n  }\n\n  getAvailableCenters() {\n    axios({\n      method: 'get',\n      url: '/api/centers/list'\n    }).then(response => {\n      this.setState({\n        availableCenters: response.data,\n        center: response.data[0].centerName + '|' + response.data[0]._id\n      }, () => {\n        var center_ID = this.state.center.split('|')[1];\n        this.setState({\n          center_ID: center_ID\n        }, () => {\n          this.getData(this.state.year, this.state.center_ID);\n          this.getCenterwiseData(this.state.year, this.state.center_ID);\n        });\n      });\n    }).catch(function (error) {});\n  }\n\n  selectCenter(event) {\n    var selectedCenter = event.target.value;\n    this.setState({\n      [event.target.name]: event.target.value,\n      selectedCenter: selectedCenter\n    }, () => {\n      var center_ID = this.state.selectedCenter.split('|')[1];\n      this.setState({\n        center_ID: center_ID\n      }, () => {\n        this.getData(this.state.year, this.state.center_ID);\n        this.getCenterwiseData(this.state.year, this.state.center_ID);\n      });\n    });\n  }\n\n  getData(year, center_ID) {\n    var startDate = year.substring(3, 7) + \"-04-01\";\n    var endDate = year.substring(10, 15) + \"-03-31\";\n\n    if (startDate, endDate, center_ID) {\n      axios.get('/api/report/sector/' + startDate + '/' + endDate + '/all').then(response => {\n        var sector = [];\n        var annualPlanReach = [];\n        var annualPlanFamilyUpgradation = [];\n        var achievementReach = [];\n        var achievementFamilyUpgradation = [];\n        var annualPlanTotalBudget = [];\n        var piechartcolor = [];\n\n        if (response.data && response.data.length > 0) {\n          response.data.map((data, index) => {\n            sector.push(data.name);\n            annualPlanReach.push(data.annualPlan_Reach);\n            annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n            achievementReach.push(data.achievement_Reach);\n            achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);\n            annualPlanTotalBudget.push(data.annualPlan_TotalBudget);\n            piechartcolor.push(this.getRandomColor());\n          });\n          this.setState({\n            \"sector\": sector.splice(-2),\n            \"annualPlanReach1\": annualPlanReach.splice(-2),\n            \"annualPlanFamilyUpgradation1\": annualPlanFamilyUpgradation.splice(-2),\n            \"achievementReach1\": achievementReach.splice(-2),\n            \"achievementFamilyUpgradation1\": achievementFamilyUpgradation.splice(-2),\n            \"annualPlan_TotalBudget1\": annualPlanTotalBudget.splice(-2)\n          }, () => {\n            this.setState({\n              \"sector\": sector,\n              \"annualPlanReach\": annualPlanReach,\n              \"annualPlanFamilyUpgradation\": annualPlanFamilyUpgradation,\n              \"achievementReach\": achievementReach,\n              \"achievementFamilyUpgradation\": achievementFamilyUpgradation,\n              \"annualPlanTotalBudget\": annualPlanTotalBudget,\n              piechartcolor: piechartcolor\n            }, () => {});\n          });\n        }\n\n        var tableData = response.data.map((a, i) => {\n          return {\n            name: a.name,\n            annualPlan_Reach: a.annualPlan_Reach,\n            annualPlan_FamilyUpgradation: a.annualPlan_FamilyUpgradation,\n            achievement_Reach: a.achievement_Reach,\n            achievement_FamilyUpgradation: a.achievement_FamilyUpgradation,\n            annualPlan_TotalBudget: a.annualPlan_TotalBudget\n          };\n        });\n        this.setState({\n          tableData: tableData\n        }, () => {});\n      }).catch(function (error) {});\n    }\n  }\n\n  getCenterwiseData(year, center_ID) {}\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Center\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"center\",\n      name: \"center\",\n      value: this.state.center,\n      onChange: this.selectCenter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"-- Select --\"), this.state.availableCenters && this.state.availableCenters.length > 0 ? this.state.availableCenters.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: data._id,\n        value: data.centerName + '|' + data._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 31\n        }\n      }, data.centerName);\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 56\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 18\n      }\n    }, \"-- Select Year --\"), this.state.years.map((data, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 28\n        }\n      }, data);\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      annualPlanReach: this.state.annualPlanReach,\n      sector: this.state.sector,\n      annualPlanFamilyUpgradation: this.state.annualPlanFamilyUpgradation,\n      achievementReach: this.state.achievementReach,\n      achievementFamilyUpgradation: this.state.achievementFamilyUpgradation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, \"Sector wise Budget\"), /*#__PURE__*/React.createElement(PieChart, {\n      annualPlanTotalBudget: this.state.annualPlanTotalBudget,\n      piechartcolor: this.state.piechartcolor,\n      sector: this.state.sector,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/chart.js"],"names":["React","Component","moment","$","axios","render","html2canvas","Chart","BarChart","PieChart","CenterWisePieChart","IAssureTable","Charts","constructor","props","state","piechartcolor","name","annualPlan_Reach","annualPlan_FamilyUpgradation","achievement_Reach","achievement_FamilyUpgradation","annualPlan_TotalBudget","componentDidMount","defaults","headers","common","localStorage","getItem","getAvailableCenters","getData","year","center_ID","getCenterwiseData","componentWillReceiveProps","nextProps","handleChange","event","preventDefault","setState","target","value","method","url","then","response","availableCenters","data","center","centerName","_id","split","catch","error","selectCenter","selectedCenter","startDate","substring","endDate","get","sector","annualPlanReach","annualPlanFamilyUpgradation","achievementReach","achievementFamilyUpgradation","annualPlanTotalBudget","length","map","index","push","getRandomColor","splice","tableData","a","i","letters","color","Math","floor","random","bind","years"],"mappings":"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","sourcesContent":["import React, { Component }                                  from 'react';\nimport moment               from 'moment';\nimport $                                                     from 'jquery';\nimport axios                                                 from 'axios';\nimport { render } from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport PieChart from './PieChart.js';\nimport CenterWisePieChart from './CenterWisePieChart.js';\nimport './Chart.css';\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\n\nexport default class Charts extends Component{\n  \n  constructor(props) {\n   super(props);\n    this.state = {\n      'year'                        : \"FY 2019 - 2020\",\n      \"years\"                       :[\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"],      \n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\"            : [],\n      \"annualPlanFamilyUpgradation\" : [],\n      \"annualPlanReach\"             : [],\n      \"sector\"                      : [],\n      piechartcolor                 : [],\n      \"tableHeading\"                : {\n        name                                    : \"Sector\",\n        annualPlan_Reach                        : \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation            : \"anPlan_FamilyUpg\",    \n        achievement_Reach                       : \"achie_Reach\",\n        achievement_FamilyUpgradation           : \"achie_FamilyUpg\",       \n        annualPlan_TotalBudget                  : \"annualPlan_TotalBudget\"     \n               \n      },\n\n\n    }\n  }\n\n  componentDidMount(){\n    axios.defaults.headers.common['Authorization'] = 'Bearer '+ localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n    componentWillReceiveProps(nextProps){\n      this.getAvailableCenters();\n      this.getData(this.state.year, this.state.center_ID);\n      this.getCenterwiseData(this.state.year, this.state.center_ID);\n    }\n    handleChange(event){\n        event.preventDefault();\n        this.setState({\n          [event.target.name] : event.target.value\n        },()=>{\n        });\n    }\n    getAvailableCenters(){\n        axios({\n          method: 'get',\n          url: '/api/centers/list',\n        }).then((response)=> {\n          this.setState({\n            availableCenters : response.data,\n            center           : response.data[0].centerName+'|'+response.data[0]._id\n          },()=>{\n            var center_ID = this.state.center.split('|')[1];\n            this.setState({\n              center_ID        : center_ID\n            },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getCenterwiseData(this.state.year, this.state.center_ID);\n            })\n          })\n        }).catch(function (error) {\n        });\n    } \n    selectCenter(event){\n        var selectedCenter = event.target.value;\n        this.setState({\n          [event.target.name] : event.target.value,\n          selectedCenter : selectedCenter,\n        },()=>{\n          var center_ID = this.state.selectedCenter.split('|')[1];\n          this.setState({\n            center_ID :center_ID,            \n          },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getCenterwiseData(this.state.year, this.state.center_ID);\n           })\n        });\n    } \n\n\n  getData(year, center_ID){\n    var startDate = year.substring(3, 7)+\"-04-01\";\n    var endDate = year.substring(10, 15)+\"-03-31\";\n    if(startDate, endDate, center_ID){\n        axios.get('/api/report/sector/'+startDate+'/'+endDate+'/all')\n        .then((response)=>{\n\n          var sector = [];\n          var annualPlanReach = [];\n          var annualPlanFamilyUpgradation = [];\n          var achievementReach = [];\n          var achievementFamilyUpgradation = [];\n          var annualPlanTotalBudget = [];\n          var piechartcolor =[];\n         if(response.data&&response.data.length >0){\n            response.data.map((data,index)=>{\n              sector.push(data.name);\n              annualPlanReach.push(data.annualPlan_Reach);\n              annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n              achievementReach.push(data.achievement_Reach);\n              achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);\n              annualPlanTotalBudget.push(data.annualPlan_TotalBudget);\n              piechartcolor.push(this.getRandomColor());\n            })\n\n          this.setState({\n            \"sector\" : sector.splice(-2),\n            \"annualPlanReach1\" : annualPlanReach.splice(-2),\n            \"annualPlanFamilyUpgradation1\" : annualPlanFamilyUpgradation.splice(-2),\n            \"achievementReach1\" : achievementReach.splice(-2),\n            \"achievementFamilyUpgradation1\" : achievementFamilyUpgradation.splice(-2),\n            \"annualPlan_TotalBudget1\" : annualPlanTotalBudget.splice(-2),\n          },()=>{\n             this.setState({\n              \"sector\"                       : sector,\n              \"annualPlanReach\"              : annualPlanReach,\n              \"annualPlanFamilyUpgradation\"  : annualPlanFamilyUpgradation,\n              \"achievementReach\"             : achievementReach,\n              \"achievementFamilyUpgradation\" : achievementFamilyUpgradation,\n              \"annualPlanTotalBudget\"       : annualPlanTotalBudget,\n              piechartcolor                 : piechartcolor\n            },()=>{\n                    \n            });\n          \n          })\n        }    \n          var tableData = response.data.map((a, i)=>{\n            return {\n                name                                    : a.name,\n                annualPlan_Reach                        : a.annualPlan_Reach,\n                annualPlan_FamilyUpgradation            : a.annualPlan_FamilyUpgradation, \n                achievement_Reach                       : a.achievement_Reach,\n                achievement_FamilyUpgradation           : a.achievement_FamilyUpgradation,            \n                annualPlan_TotalBudget                  : a.annualPlan_TotalBudget,            \n            } \n        })  \n        this.setState({\n          tableData : tableData\n        },()=>{\n        })\n      })\n      .catch(function(error){        \n      });\n    }\n  }\n\n  getCenterwiseData(year, center_ID){\n   \n  }\n  getRandomColor(){\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render(){ \n\n    return(\n      <div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\">\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                <label className=\"formLable\">Center</label><span className=\"asterix\"></span>\n                <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"center\" >\n                    <select className=\"custom-select form-control inputBox\" ref=\"center\" name=\"center\" value={this.state.center} onChange={this.selectCenter.bind(this)} >\n                        <option className=\"hidden\" >-- Select --</option>\n                        {\n                          this.state.availableCenters && this.state.availableCenters.length >0 ?\n                          this.state.availableCenters.map((data, index)=>{\n                            return(\n                              <option key={data._id} value={data.centerName+'|'+data._id}>{data.centerName}</option>\n                            );\n                          })\n                          :\n                          null\n                        }\n                    </select>\n                </div>\n            </div>\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <label className=\"formLable\">Year</label><span className=\"asterix\"></span>\n              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"year\" >\n                <select className=\"custom-select form-control inputBox\" ref=\"year\" name=\"year\" value={this.state.year}  onChange={this.handleChange.bind(this)} >\n                 <option className=\"hidden\" >-- Select Year --</option>\n                 {\n                  this.state.years.map((data, i)=>{\n                    return <option key={i}>{data}</option>\n                  })\n                 }\n                </select>\n              </div>\n            </div>  \n        </div>  \n        <div className=\"col-lg-6\">\n          <BarChart annualPlanReach={this.state.annualPlanReach} sector={this.state.sector} annualPlanFamilyUpgradation={this.state.annualPlanFamilyUpgradation} achievementReach={this.state.achievementReach} achievementFamilyUpgradation={this.state.achievementFamilyUpgradation}/>\n        </div>\n        <div className=\"col-lg-6\">\n          <h3>Sector wise Budget</h3>\n          <PieChart annualPlanTotalBudget={this.state.annualPlanTotalBudget} piechartcolor={this.state.piechartcolor}  sector={this.state.sector}/>\n        </div>\n      </div>  \n        <br/>\n        \n      </div>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}