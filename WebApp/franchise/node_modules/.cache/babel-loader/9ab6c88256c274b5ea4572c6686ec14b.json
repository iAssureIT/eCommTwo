{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/WeeklyReport.js\";\nimport React, { Component } from 'react';\nimport IAssureTable from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nexport default class WeeklyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"twoLevelHeader\": {\n        apply: false\n      },\n      \"tableHeading\": {\n        orderID: \"Order ID\",\n        cratedAt: \"Order Date\",\n        userFullName: \"Customer Name\",\n        totalAmount: \"Amount\",\n        deliveryStatus: \"Delivery Status\"\n      },\n      \"tableData\": [],\n      \"tableObjects\": {\n        apiLink: '/api/annualPlans/',\n        editUrl: '/Plan/',\n        paginationApply: true\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      fields: {},\n      errors: {},\n      selectedWeekYear: '',\n      selectedWeek: '',\n      startDate: '',\n      endDate: '',\n      dataCount: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedWeekYear: moment().format('Y') + '-' + moment().format('w') + 'W',\n      selectedWeek: moment().format('w'),\n      startDate: moment().year(moment().format('Y')).week(moment().format('W')).startOf('week').format('YYYY-MM-DD'),\n      endDate: moment().year(moment().format('Y')).week(moment().format('W')).endOf('week').format('YYYY-MM-DD')\n    }, () => {\n      this.getCount();\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reportData) {\n      this.setState({\n        reportData: nextProps.reportData\n      });\n    }\n  }\n\n  getCount() {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report-count\", formvalues).then(response => {\n      this.setState({\n        dataCount: response.data.dataCount\n      }, () => {});\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getData(startRange, limitRange) {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report/\" + startRange + '/' + limitRange, formvalues).then(response => {\n      this.setState({\n        tableData: response.data\n      }, () => {\n        console.log(\"tableData\", this.state.tableData);\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  previousWeek(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).subtract(1, \"week\").format('YYYY-MM-DD');\n    this.setState({\n      selectedWeekYear: moment(startDate).format('Y') + '-' + moment(startDate).format('w') + 'W',\n      selectedWeek: moment(startDate).format('w'),\n      startDate: startDate,\n      endDate: moment(startDate).add(1, \"week\").format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  nextWeek(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).add(1, \"week\").format('YYYY-MM-DD');\n    this.setState({\n      selectedWeekYear: moment(startDate).format('Y') + '-' + moment(startDate).format('w') + 'W',\n      selectedWeek: moment(startDate).format('w'),\n      startDate: startDate,\n      endDate: moment(startDate).add(1, \"week\").format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  dataTableList() {// var weekNumFromSess = Session.get(\"selectedWeek\");\n    // var mondayInWeek = moment(weekNumFromSess).day(\"Monday\").week(weekNumFromSess).format();\n    // var mondayInWeekDt = new Date(mondayInWeek);\n    // var sundayOfWeek = moment(mondayInWeek).add(7,\"days\").format();\n    // var sundayOfWeekDt = new Date(sundayOfWeek);\n    // var reportData = [];\n    // if(this.props.selectedCategory){\n    //     if(this.props.selectedSubCategory){\n    //         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //     }else{\n    //         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //     }\n    // }else{\n    //     reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n    // }\n    // this.setState({\n    //     reportData : reportData\n    // });\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    if (!this.props.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sales-report-main-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxmain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxsec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, \"Weekly Reports\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.previousWeek.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-left\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 155\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChange,\n        name: \"inputweekpicker\",\n        value: this.state.selectedWeekYear,\n        type: \"text\",\n        className: \"reportsDateRef inputweekpicker form-control\",\n        placeholder: \"\",\n        \"aria-label\": \"Brand\",\n        \"aria-describedby\": \"basic-addon1\",\n        ref: \"inputweekpicker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.nextWeek.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-right\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 150\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-list-downloadMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IAssureTable, {\n        tableHeading: this.state.tableHeading,\n        twoLevelHeader: this.state.twoLevelHeader,\n        dataCount: this.state.dataCount,\n        tableData: this.state.tableData,\n        getData: this.getData.bind(this),\n        tableObjects: this.state.tableObjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"ldrImageforbulk\",\n        src: \"/images/Loadersglms.gif\",\n        alt: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 110\n        }\n      }));\n    }\n  }\n\n} // export default WeeklyListContainer = withTracker(props =>{\n// var weekNumFromSess = Session.get(\"selectedWeek\");\n// var mondayInWeek = moment(weekNumFromSess).format();\n// var mondayInWeekDt = new Date(mondayInWeek);\n// var sundayOfWeek = moment(mondayInWeek).add(7,\"days\").format();\n// var sundayOfWeekDt = new Date(sundayOfWeek);\n// const reportHandle = Meteor.subscribe(\"OrdersData\");\n// var reportData = [];\n// if(props.selectedCategory){\n//     if(props.selectedSubCategory){\n//         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//     }\n// }else{\n//     reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n// }\n// const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsWeeklyList);","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/WeeklyReport.js"],"names":["React","Component","IAssureTable","moment","$","axios","WeeklyReport","constructor","props","state","apply","orderID","cratedAt","userFullName","totalAmount","deliveryStatus","apiLink","editUrl","paginationApply","fields","errors","selectedWeekYear","selectedWeek","startDate","endDate","dataCount","componentDidMount","setState","format","year","week","startOf","endOf","getCount","getData","startRange","limitRange","componentWillReceiveProps","nextProps","reportData","formvalues","post","then","response","data","catch","error","console","log","tableData","previousWeek","event","preventDefault","subtract","add","nextWeek","handleChange","target","name","value","dataTableList","getSearchText","searchText","render","loading","bind","tableHeading","twoLevelHeader","tableObjects"],"mappings":"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","sourcesContent":["import React, { Component }     from 'react';\nimport IAssureTable             from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios                  from 'axios';\n\nexport default class WeeklyReport extends Component{\n\tconstructor(props){\n        super(props);\n        this.state = {\n           \"twoLevelHeader\"     : {\n            apply               : false,\n          },\n          \"tableHeading\"        : {\n            orderID                    : \"Order ID\",\n            cratedAt                   : \"Order Date\",\n            userFullName               : \"Customer Name\",\n            totalAmount                : \"Amount\",\n            deliveryStatus             : \"Delivery Status\",\n\n          },\n          \"tableData\"           : [],\n          \"tableObjects\"        : {\n            apiLink             : '/api/annualPlans/',\n            editUrl             : '/Plan/',\n            paginationApply     : true,\n          },\n          \"startRange\"          : 0,\n          \"limitRange\"          : 10,\n          fields                : {},\n          errors                : {},\n          selectedWeekYear       : '',\n          selectedWeek           : '',\n          startDate             : '',\n          endDate               : '',\n          dataCount             : 0\n        } \n    }\n\n    componentDidMount(){\n        \n        \n        this.setState({\n            selectedWeekYear : moment().format('Y')+'-'+moment().format('w')+'W',\n            selectedWeek : moment().format('w'),\n            startDate   : moment().year(moment().format('Y')).week(moment().format('W')).startOf('week').format('YYYY-MM-DD'),\n            endDate     : moment().year(moment().format('Y')).week(moment().format('W')).endOf('week').format('YYYY-MM-DD')\n            },\n            ()=>{\n            this.getCount();  \n            this.getData(this.state.startRange, this.state.limitRange )    \n        })\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.reportData){\n            this.setState({\n                reportData : nextProps.reportData\n            });\n        }\n    }\n    getCount(){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n\n        axios.post(\"/api/orders/get/report-count\", formvalues)\n        .then((response)=>{\n          this.setState({ \n            dataCount : response.data.dataCount\n          },()=>{ \n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    getData(startRange,limitRange){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n\n        axios.post(\"/api/orders/get/report/\"+startRange+'/'+limitRange, formvalues)\n        .then((response)=>{\n          this.setState({ \n            tableData : response.data\n          },()=>{ \n            console.log(\"tableData\",this.state.tableData);\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    \n\n\tpreviousWeek(event){\n\t\tevent.preventDefault();\n        \n        var startDate = moment(this.state.startDate).subtract(1, \"week\").format('YYYY-MM-DD');\n\n        this.setState({\n            selectedWeekYear: moment(startDate).format('Y')+'-'+moment(startDate).format('w')+'W',\n            selectedWeek    : moment(startDate).format('w'), \n            startDate       : startDate,\n            endDate         : moment(startDate).add(1, \"week\").format('YYYY-MM-DD')\n        },()=>{\n            this.getData(this.state.startRange, this.state.limitRange )   \n        })\n\t}\n\n\tnextWeek(event){\n\t\tevent.preventDefault();\n        \n        var startDate = moment(this.state.startDate).add(1, \"week\").format('YYYY-MM-DD');\n\n        this.setState({\n            selectedWeekYear: moment(startDate).format('Y')+'-'+moment(startDate).format('w')+'W',\n            selectedWeek    : moment(startDate).format('w'), \n            startDate       : startDate,\n            endDate         : moment(startDate).add(1, \"week\").format('YYYY-MM-DD')\n        },()=>{\n            this.getData(this.state.startRange, this.state.limitRange )   \n        })\n    }\n    \n    handleChange(event){\n        event.preventDefault();\n        const target = event.target;\n        const name = target.name;\n\n        this.setState({\n           [name] : event.target.value,\n        });\n    }\n    dataTableList(){\n        // var weekNumFromSess = Session.get(\"selectedWeek\");\n        \n        // var mondayInWeek = moment(weekNumFromSess).day(\"Monday\").week(weekNumFromSess).format();\n\n        // var mondayInWeekDt = new Date(mondayInWeek);\n        // var sundayOfWeek = moment(mondayInWeek).add(7,\"days\").format();\n        // var sundayOfWeekDt = new Date(sundayOfWeek);\n        \n        // var reportData = [];\n        // if(this.props.selectedCategory){\n        //     if(this.props.selectedSubCategory){\n        //         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n        //     }else{\n        //         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n        //     }\n        // }else{\n        //     reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n        // }\n        // this.setState({\n        //     reportData : reportData\n        // });\n\n    }\n    \n    getSearchText(searchText, startRange, limitRange){\n        this.setState({\n            tableData : []\n        });\n    }\n    render(){\n        if(!this.props.loading){\n            return( \n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div className=\"sales-report-main-class\">\n                        <div className=\"reports-select-date-boxmain\">\n                            <div className=\"reports-select-date-boxsec\">\n                                <div className=\"reports-select-date-Title\">Weekly Reports</div>\n                                <div className=\"input-group\">\n                                    <span  onClick={this.previousWeek.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i></span>\n                                    <input  onChange={this.handleChange} name=\"inputweekpicker\" value={this.state.selectedWeekYear}  type=\"text\" className=\"reportsDateRef inputweekpicker form-control\" placeholder=\"\" aria-label=\"Brand\" aria-describedby=\"basic-addon1\" ref=\"inputweekpicker\"  />\n                                    <span onClick={this.nextWeek.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i></span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"report-list-downloadMain\">\n                            \n                            {\n                            <IAssureTable \n                                tableHeading={this.state.tableHeading}\n                                twoLevelHeader={this.state.twoLevelHeader} \n                                dataCount={this.state.dataCount}\n                                tableData={this.state.tableData}\n                                getData={this.getData.bind(this)}\n                                tableObjects={this.state.tableObjects}\n                            />\n                            }\n\n                        </div>\n                    </div>\n                \n                    \n                </div>\n                \n            );\n        }else{\n            return(\n                <div className=\"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\"><img className=\"ldrImageforbulk\" src=\"/images/Loadersglms.gif\" alt=\"loading\"/></div>\n            );\n        } \n    }\n}\n// export default WeeklyListContainer = withTracker(props =>{\n// var weekNumFromSess = Session.get(\"selectedWeek\");\n        \n// var mondayInWeek = moment(weekNumFromSess).format();\n\n// var mondayInWeekDt = new Date(mondayInWeek);\n// var sundayOfWeek = moment(mondayInWeek).add(7,\"days\").format();\n// var sundayOfWeekDt = new Date(sundayOfWeek);\n\n// const reportHandle = Meteor.subscribe(\"OrdersData\");\n// var reportData = [];\n// if(props.selectedCategory){\n//     if(props.selectedSubCategory){\n//         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//     }\n// }else{\n//     reportData =  Orders.find({'createdAt':{$gte : mondayInWeekDt, $lt : sundayOfWeekDt }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n// }\n// const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsWeeklyList);"]},"metadata":{},"sourceType":"module"}