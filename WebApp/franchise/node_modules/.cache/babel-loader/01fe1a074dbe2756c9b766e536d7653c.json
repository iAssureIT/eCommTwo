{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/BarChart.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nconst options = {\n  scales: {\n    xAxes: [{\n      stacked: true\n    }],\n    yAxes: [{\n      stacked: true\n    }]\n  },\n  responsive: true,\n  maintainAspectRatio: false\n};\nexport default class BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"data\": {\n        labels: [],\n        datasets: [{\n          label: 'Achievement Family Upgradation',\n          backgroundColor: 'rgba(255, 206, 86, 1)',\n          borderColor: 'rgba(255, 206, 86, 0.5)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255, 206, 86, 0.5)',\n          hoverBorderColor: 'rgba(255, 206, 86, 0.5)',\n          stack: '1',\n          data: []\n        }, {\n          label: 'Achievement Reach',\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgba(54, 162, 235, 0.5)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(54, 162, 235, 0.5)',\n          hoverBorderColor: 'rgba(54, 162, 235, 0.5)',\n          stack: '1',\n          data: []\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getSectorwiseFamilyupg(this.props.year);\n  }\n\n  getSectorwiseFamilyupg(year) {\n    var oudata = { ...this.state.data\n    };\n    var startDate = year.substring(3, 7) + \"-04-01\";\n    var endDate = year.substring(10, 15) + \"-03-31\";\n\n    if (startDate, endDate) {\n      axios.get('/api/report/sector/' + startDate + '/' + endDate + '/all/all/all/all').then(response => {\n        response.data.splice(-2);\n        var sector = [];\n        var annualPlanReach = [];\n        var annualPlanFamilyUpgradation = [];\n        var achievementReach = [];\n        var achievementFamilyUpgradation = [];\n\n        if (response.data && response.data.length > 0) {\n          response.data.map((data, index) => {\n            if (data.achievement_Reach > 0 || data.achievement_FamilyUpgradation > 0) {\n              sector.push(data.name);\n              annualPlanReach.push(data.annualPlan_Reach);\n              annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n              achievementReach.push(data.achievement_Reach);\n              achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);\n            }\n          });\n\n          if (achievementReach.length > 0 || achievementFamilyUpgradation.length > 0) {\n            oudata.datasets[0].data = achievementFamilyUpgradation;\n            oudata.datasets[1].data = achievementReach;\n            oudata.labels = sector;\n          } else {\n            oudata.datasets[0].data = [200, 100, 500, 750, 300, 600, 900, 150];\n            oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n            oudata.labels = [\"AG\", \"NRM\", \"AH\", \"Edu\", \"Health\", \"Infra\", \"WE\", \"RI\"];\n            this.setState({\n              \"data\": oudata\n            });\n          }\n        } else {\n          oudata.datasets[0].data = [200, 100, 500, 750, 300, 600, 900, 150];\n          oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n          oudata.labels = [\"AG\", \"NRM\", \"AH\", \"Edu\", \"Health\", \"Infra\", \"WE\", \"RI\"];\n          this.setState({\n            \"data\": oudata\n          });\n        }\n      }).catch(function (error) {});\n    } else {\n      oudata.datasets[0].data = [200, 100, 500, 750, 300, 600, 900, 150];\n      oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n      oudata.labels = [\"AG\", \"NRM\", \"AH\", \"Edu\", \"Health\", \"Infra\", \"WE\", \"RI\"];\n      this.setState({\n        \"data\": oudata\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.data,\n      height: 300,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/BarChart.js"],"names":["React","Component","Bar","axios","options","scales","xAxes","stacked","yAxes","responsive","maintainAspectRatio","BarChart","constructor","props","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","stack","data","componentDidMount","getSectorwiseFamilyupg","year","oudata","startDate","substring","endDate","get","then","response","splice","sector","annualPlanReach","annualPlanFamilyUpgradation","achievementReach","achievementFamilyUpgradation","length","map","index","achievement_Reach","achievement_FamilyUpgradation","push","name","annualPlan_Reach","annualPlan_FamilyUpgradation","setState","catch","error","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport axios             from 'axios';\n\nconst options = {\n    scales: {\n      xAxes: [{\n        stacked: true,\n      }],\n      yAxes: [{\n        stacked: true,\n          }],\n    },\n    responsive: true,\n    maintainAspectRatio: false     \n};\n\nexport default class BarChart extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      \"data\" : {\n        labels: [],\n        datasets: [\n          {\n            label: 'Achievement Family Upgradation',\n            backgroundColor:'rgba(255, 206, 86, 1)',\n            borderColor: 'rgba(255, 206, 86, 0.5)',\n            borderWidth: 1,\n            hoverBackgroundColor:'rgba(255, 206, 86, 0.5)',\n            hoverBorderColor:'rgba(255, 206, 86, 0.5)',\n            stack: '1',\n            data: []\n          },\n          {\n            label: 'Achievement Reach',\n            backgroundColor:'rgba(54, 162, 235, 1)',\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(54, 162, 235, 0.5)',\n            hoverBorderColor: 'rgba(54, 162, 235, 0.5)',\n            stack: '1',\n            data: []\n          }\n        ]\n      }\n    }\n  }\n\n  componentDidMount(){\n    this.getSectorwiseFamilyupg(this.props.year)\n  }\n  getSectorwiseFamilyupg(year){\n    var oudata = {...this.state.data};\n    var startDate = year.substring(3, 7)+\"-04-01\";\n    var endDate = year.substring(10, 15)+\"-03-31\";\n    if(startDate, endDate){\n        axios.get('/api/report/sector/'+startDate+'/'+endDate+'/all/all/all/all')\n        .then((response)=>{ \n          response.data.splice(-2);\n          var sector = [];\n          var annualPlanReach = [];\n          var annualPlanFamilyUpgradation = [];\n\n          var achievementReach = [];\n          var achievementFamilyUpgradation = [];\n\n         if(response.data&&response.data.length >0){\n            response.data.map((data,index)=>{\n              if(data.achievement_Reach > 0 || data.achievement_FamilyUpgradation > 0){ \n                sector.push(data.name);\n                annualPlanReach.push(data.annualPlan_Reach);\n                annualPlanFamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n                achievementReach.push(data.achievement_Reach);\n                achievementFamilyUpgradation.push(data.achievement_FamilyUpgradation);                \n              }            \n            })\n\n            if(achievementReach.length > 0 || achievementFamilyUpgradation.length > 0 ){\n              oudata.datasets[0].data = achievementFamilyUpgradation;\n              oudata.datasets[1].data = achievementReach;\n              oudata.labels           = sector;\n            }else{\n              oudata.datasets[0].data = [200, 100, 500, 750, 300,600,900,150];\n              oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n              oudata.labels           = [\"AG\",\"NRM\",\"AH\",\"Edu\",\"Health\",\"Infra\",\"WE\",\"RI\"];\n              this.setState({\n                \"data\" : oudata\n              })\n            } \n          }else{\n            oudata.datasets[0].data = [200, 100, 500, 750, 300,600,900,150];\n            oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n            oudata.labels           = [\"AG\",\"NRM\",\"AH\",\"Edu\",\"Health\",\"Infra\",\"WE\",\"RI\"];\n            this.setState({\n              \"data\" : oudata\n            })     \n          }   \n      })\n      .catch(function(error){        \n      });\n    }else{\n       oudata.datasets[0].data = [200, 100, 500, 750, 300,600,900,150];\n        oudata.datasets[1].data = [2000, 1000, 1500, 5000, 2700, 4800, 5400, 2100];\n        oudata.labels           = [\"AG\",\"NRM\",\"AH\",\"Edu\",\"Health\",\"Infra\",\"WE\",\"RI\"];\n        this.setState({\n          \"data\" : oudata\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n       <Bar data={this.state.data} height={300}  options={options} />\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}