{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/storeAdmin/bulkimageUpload/BulkProductImageUpload.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport S3FileUpload from 'react-s3';\n\nclass BulkProductImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notuploadedImages: [],\n      allshopproductimages: [],\n      productImageArray: [],\n      progressLength: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios.get('/api/products/get/list').then(response => {\n      console.log('response', response.data);\n      this.setState({\n        allshopproductimages: response.data\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      'allshopproductimages': nextProps.productData\n    });\n  }\n\n  bulkuplodaProductImages(event) {\n    event.preventDefault();\n    var productImage = [];\n\n    if (event.currentTarget.files && event.currentTarget.files[0]) {\n      for (var i = 0; i < event.currentTarget.files.length; i++) {\n        var file = event.currentTarget.files[i];\n\n        if (file) {\n          var fileName = file.name;\n          var itemCode = file.name.split('-')[0];\n          console.log('file', fileName, itemCode);\n          var ext = fileName.split('.').pop();\n\n          if (ext === \"jpg\" || ext === \"png\" || ext === \"jpeg\" || ext === \"JPG\" || ext === \"PNG\" || ext === \"JPEG\") {\n            if (file) {\n              var objTitle = {\n                fileInfo: file,\n                itemCode: itemCode\n              };\n              productImage.push(objTitle);\n            } else {\n              swal(\"Images not uploaded\");\n            } //file\n\n          } else {\n            swal(\"Allowed images formats are (jpg,png,jpeg)\");\n          } //file types\n\n        } //file\n\n      } //for \n\n\n      if (i >= event.currentTarget.files.length) {\n        this.setState({\n          productImage: productImage\n        }, () => {\n          console.log('productImage', this.state.productImage);\n        });\n\n        const main = async () => {\n          var config = await getConfig();\n          console.log(\"2.config:\", config);\n\n          if (config) {\n            var s3urlArray = [];\n            var imageLength = 100;\n            console.log('imageLength', imageLength);\n            var z = 0;\n\n            for (var i = 0; i < productImage.length; i++) {\n              console.log(\"3. inside for loop\");\n              var s3url = await s3upload(productImage[i].fileInfo, config, this);\n              var x = i + 1;\n              var progressLength = x / productImage.length * 100;\n              console.log('progressLength', progressLength, z);\n              this.setState({\n                progressLength: progressLength\n              });\n              console.log('s3url', s3url);\n              s3urlArray.push({\n                productImage: s3url,\n                itemCode: productImage[i].itemCode\n              });\n            }\n\n            console.log('progressLength', progressLength, imageLength);\n            const formValues = {\n              \"product_ID\": \"fhfgf\",\n              \"productImage\": s3urlArray,\n              \"status\": \"New\"\n            }; // console.log(\"1 formValues = \",formValues);\n\n            return Promise.resolve(formValues);\n          }\n        };\n\n        main().then(formValues => {\n          console.log('formValues.productImage', formValues);\n          var newImages = this.state.productImageArray;\n          newImages.push(formValues.productImage);\n          this.setState({\n            productImageArray: _.flatten(newImages)\n          }, () => {\n            console.log('form', this.state.productImageArray);\n          });\n        });\n\n        function s3upload(image, configuration) {\n          console.log(\"4. Config:\", configuration);\n          return new Promise(function (resolve, reject) {\n            S3FileUpload.uploadFile(image, configuration).then(Data => {\n              console.log(\"5.Data = \", Data);\n              resolve(Data.location);\n            }).catch(error => {\n              console.log(error);\n            });\n          });\n        }\n\n        function getConfig() {\n          return new Promise(function (resolve, reject) {\n            axios.get('/api/projectSettings/get/one/S3').then(response => {\n              console.log(\"1.project setting res = \", response.data);\n\n              if (response.data) {\n                const config = {\n                  bucketName: response.data[0].bucket,\n                  dirName: process.env.ENVIRONMENT,\n                  region: response.data[0].region,\n                  accessKeyId: response.data[0].key,\n                  secretAccessKey: response.data[0].secret\n                };\n                resolve(config);\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n          });\n        }\n      }\n    }\n  }\n\n  saveImages(event) {\n    event.preventDefault();\n\n    for (var i = 0; i < this.state.productImageArray.length; i++) {\n      var formValue = {\n        productImage: this.state.productImageArray[i].productImage,\n        itemCode: this.state.productImageArray[i].itemCode\n      };\n      console.log('formvalue', formValue);\n      axios.patch('/api/products/patch/bulkimages/', formValue).then(response => {\n        console.log('res', response);\n        this.getData();\n        swal(response.data.message);\n        $(':input').val('');\n      }).catch(error => {\n        console.log('error', error);\n      });\n    }\n  }\n\n  getUploadBulUSPercentage() {}\n\n  deleteproductImages(event) {\n    event.preventDefault();\n    var id = event.target.getAttribute('data-productid');\n    var image = event.target.getAttribute('data-image');\n    var formValues = {\n      product_ID: id,\n      imageLik: image\n    };\n    console.log('id', id, image);\n    swal({\n      title: \"Are you sure you want to delete this image?\",\n      text: \"Once deleted, you will not be able to recover this image!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(success => {\n      if (success) {\n        swal(\"Your image is deleted!\");\n        axios.patch('/api/products/remove/image', formValues).then(res => {\n          this.getData();\n          console.log('res', res);\n        }).catch(error => {\n          console.log('errro', error);\n        });\n      } else {\n        swal(\"Your image is safe!\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"NOpadding-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, \"  Product Image Bulk Upload\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"addRolesInWrap newTemplateForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-lg-offset-3  col-md-4 col-md-offset-3 col-sm-12 col-xs-12 marginTopp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, \"Upload Product Images\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control bulkuplodaProductImagesInp\",\n      multiple: true,\n      onChange: this.bulkuplodaProductImages.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, this.getUploadBulUSPercentage()))), this.state.progressLength === 100 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4  col-md-4 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 31\n      }\n    }, \"\\xA0 \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.saveImages.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 31\n      }\n    }, \"Save Images\"))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-xs-12 col-sm-12 upldImgTextColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"Image name must be saved in format \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"upldImgTextColor1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 60\n      }\n    }, \"Your Item Code\"), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"upldImgTextColor2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 120\n      }\n    }, \"Image Number for that product. \"), \"eg. ItemCode0-1, ItemCode0-2, ItemCode0-3, ... etc.\"), this.state.progressLength === 0 || this.state.progressLength === 100 ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress img-progress col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-xs-12 col-sm-12 NOpadding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      role: \"progressbar\",\n      style: {\n        width: \"\" + this.state.progressLength + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"img-percent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, this.state.progressLength, \"% Complete\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 23\n      }\n    }, this.state.notuploadedImages.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notBlkUplImgListOuter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notBlkUplImgListTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 31\n      }\n    }, \"Images not Uploaded\"), this.state.notuploadedImages.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notBlkUplImgList\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 37\n        }\n      }, data);\n    })) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"HRMSWrapper col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table iAssureITtable-bordered table-striped table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"tempTableHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"col-lg-1 umDynamicHeader srpadd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 35\n      }\n    }, \"Sr no.\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"col-lg-2 umDynamicHeader srpadd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 35\n      }\n    }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"col-lg-2 umDynamicHeader srpadd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 35\n      }\n    }, \"Product Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"col-lg-7 umDynamicHeader srpadd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 35\n      }\n    }, \"Images\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 31\n      }\n    }, this.state.allshopproductimages.map((data, index) => {\n      {\n        console.log(\"data.productImage = \", data.productImage);\n      }\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }\n      }, \" \", index + 1, \"     \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 41\n        }\n      }, \" \", data.itemCode, \"    \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 41\n        }\n      }, \" \", data.productName, \"    \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 41\n        }\n      }, data.productImage.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"deleteimagewrapper bulkimagebg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 45\n        }\n      }, data.productImage.map((imgdata, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 deleteImgBlkUpldCol-lg-3\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-times deleteImgBlkUpld\",\n          \"aria-hidden\": \"true\",\n          \"data-image\": imgdata,\n          \"data-productid\": data._id,\n          onClick: this.deleteproductImages.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 55\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          src: imgdata,\n          className: \"img-thumbnail\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 55\n          }\n        }));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bulkImgUpldNotShown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 43\n        }\n      }, \"No Images Available\")));\n    })))))))))))))));\n  }\n\n}\n\nexport default BulkProductImageUpload;","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/storeAdmin/bulkimageUpload/BulkProductImageUpload.js"],"names":["React","Component","$","axios","swal","_","S3FileUpload","BulkProductImageUpload","constructor","props","state","notuploadedImages","allshopproductimages","productImageArray","progressLength","componentDidMount","getData","get","then","response","console","log","data","setState","catch","error","componentWillReceiveProps","nextProps","productData","bulkuplodaProductImages","event","preventDefault","productImage","currentTarget","files","i","length","file","fileName","name","itemCode","split","ext","pop","objTitle","fileInfo","push","main","config","getConfig","s3urlArray","imageLength","z","s3url","s3upload","x","formValues","Promise","resolve","newImages","flatten","image","configuration","reject","uploadFile","Data","location","bucketName","bucket","dirName","process","env","ENVIRONMENT","region","accessKeyId","key","secretAccessKey","secret","saveImages","formValue","patch","message","val","getUploadBulUSPercentage","deleteproductImages","id","target","getAttribute","product_ID","imageLik","title","text","icon","buttons","dangerMode","success","res","render","bind","width","map","index","productName","imgdata","_id"],"mappings":"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","sourcesContent":["import React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport swal                   from 'sweetalert';\nimport _                      from 'underscore';\nimport S3FileUpload           from 'react-s3';\nclass BulkProductImageUpload extends Component{\n  constructor(props){\n      super(props);\n      this.state = {\n        notuploadedImages : [],\n        allshopproductimages : [],\n        productImageArray : [],\n        progressLength : 0\n      }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n  getData(){\n    axios.get('/api/products/get/list')\n    .then((response)=>{\n        console.log('response', response.data)\n        this.setState({\n          allshopproductimages : response.data\n        })\n    })\n    .catch((error)=>{\n        console.log('error', error);\n    })\n}\n\n\n  componentWillReceiveProps(nextProps){\n    this.setState({\n      'allshopproductimages':nextProps.productData,\n    });\n  }\n  \n  bulkuplodaProductImages(event){\n    event.preventDefault();\n        var productImage = [];\n        if (event.currentTarget.files && event.currentTarget.files[0]) {\n            for(var i=0; i<event.currentTarget.files.length; i++){\n                var file = event.currentTarget.files[i];\n                if (file) {\n                    var fileName  = file.name; \n                    var itemCode = file.name.split('-')[0];\n                    console.log('file',fileName, itemCode);\n                    var ext = fileName.split('.').pop();  \n                    if(ext===\"jpg\" || ext===\"png\" || ext===\"jpeg\" || ext===\"JPG\" || ext===\"PNG\" || ext===\"JPEG\"){\n                        if (file) {\n                            var objTitle = { \n                              fileInfo :file,\n                              itemCode : itemCode\n                            }\n                            productImage.push(objTitle);\n                            \n                        }else{          \n                            swal(\"Images not uploaded\");  \n                        }//file\n                    }else{ \n                        swal(\"Allowed images formats are (jpg,png,jpeg)\");   \n                    }//file types\n                }//file\n            }//for \n\n            if(i >= event.currentTarget.files.length){\n                this.setState({\n                    productImage : productImage\n                },()=>{\n                  console.log('productImage', this.state.productImage)\n                });  \n                \n                const main = async ()=>{\n                    var config = await getConfig();\n                    console.log(\"2.config:\",config);\n                    if(config){                    \n                    var s3urlArray = [];\n                    var imageLength = 100;\n                    console.log('imageLength',imageLength);\n                    var z = 0;\n                    for (var i = 0; i<productImage.length; i++) {\n                      console.log(\"3. inside for loop\");\n                      var s3url = await s3upload(productImage[i].fileInfo, config, this);\n                      var x = i + 1;\n                      var progressLength = (x/productImage.length) * 100;\n                      console.log('progressLength', progressLength, z);\n                      this.setState({\n                        progressLength : progressLength\n                      })\n                      console.log('s3url', s3url);\n                      s3urlArray.push({\n                        productImage : s3url,\n                        itemCode : productImage[i].itemCode\n                      });\n                    }\n                    console.log('progressLength', progressLength, imageLength);\n                    const formValues = {\n                        \"product_ID\"        : \"fhfgf\",\n                        \"productImage\"      : s3urlArray,\n                        \"status\"            : \"New\"\n                    };\n                    \n                    // console.log(\"1 formValues = \",formValues);\n                    return Promise.resolve(formValues);\n                  }\n                }\n                main().then(formValues=>{\n                  console.log('formValues.productImage', formValues);\n                  var newImages = this.state.productImageArray;\n                  newImages.push(formValues.productImage);\n                  this.setState({\n                      productImageArray : _.flatten(newImages)\n                  },()=>{\n                      console.log('form', this.state.productImageArray);\n                  })\n              });\n                function s3upload(image,configuration){\n                    console.log(\"4. Config:\",configuration);\n                    return new Promise(function(resolve,reject){\n                        S3FileUpload\n                           .uploadFile(image,configuration)\n                           .then((Data)=>{\n                                console.log(\"5.Data = \",Data);\n                                resolve(Data.location);\n                           })\n                           .catch((error)=>{\n                                console.log(error);\n                           })\n                    })\n                }   \n                function getConfig(){\n                    return new Promise(function(resolve,reject){                      \n                        axios\n                           .get('/api/projectSettings/get/one/S3')\n                           .then((response)=>{\n                                console.log(\"1.project setting res = \",response.data);\n                                if(response.data){\n                                  const config = {\n                                    bucketName      : response.data[0].bucket,\n                                    dirName         : process.env.ENVIRONMENT,\n                                    region          : response.data[0].region,\n                                    accessKeyId     : response.data[0].key,\n                                    secretAccessKey : response.data[0].secret,\n                                  }\n                                  resolve(config);                               \n                                }\n                                \n                                                           \n                            })\n                           .catch(function(error){\n                                console.log(error);\n                           })\n        \n                    })\n                }        \n            }\n        }\n    \n  }\n  saveImages(event){\n    event.preventDefault();\n    for(var i=0; i<this.state.productImageArray.length; i++){\n      var formValue = {\n        productImage  : this.state.productImageArray[i].productImage,\n        itemCode      : this.state.productImageArray[i].itemCode\n      }\n      console.log('formvalue', formValue);\n      axios.patch('/api/products/patch/bulkimages/', formValue)\n      .then((response)=>{\n        console.log('res', response);\n        this.getData();\n        swal(response.data.message);\n        $(':input').val('');\n      })\n      .catch((error)=>{\n        console.log('error', error);\n      })\n    }\n  }\n  \n  getUploadBulUSPercentage(){\n  }\n  deleteproductImages(event){\n    event.preventDefault(); \n    var id = event.target.getAttribute('data-productid');\n    var image = event.target.getAttribute('data-image');\n    var formValues = {\n      product_ID    : id,\n      imageLik      : image\n    }\n    console.log('id', id, image);\n\n    swal({\n          title: \"Are you sure you want to delete this image?\",\n          text: \"Once deleted, you will not be able to recover this image!\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((success) => {\n            if (success) {\n              swal(\"Your image is deleted!\");\n              \n                axios.patch('/api/products/remove/image', formValues)\n                .then((res)=>{\n                  this.getData();\n                  console.log('res', res);\n                })\n                .catch((error)=>{\n                  console.log('errro', error);\n                })\n            \n            } else {\n            swal(\"Your image is safe!\");\n          }\n        });\n\n \n  }\n    \n  render(){\n    return( \n\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"formWrapper\">\n            <section className=\"content\">\n              <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent\">\n                <div className=\"row\">\n                 <div className=\"\">\n                    <div className=\"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\">\n                          <h4 className=\"NOpadding-right\">  Product Image Bulk Upload</h4>\n                    </div>\n                     \n                    <form className=\"addRolesInWrap newTemplateForm\">\n                      <div className=\"\">\n                        <div className=\"col-lg-4 col-lg-offset-3  col-md-4 col-md-offset-3 col-sm-12 col-xs-12 marginTopp\">\n                          <div className=\"form-group\">\n                            <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\">\n                              Upload Product Images \n                            </label>\n                            <input type=\"file\" className=\"form-control bulkuplodaProductImagesInp\" multiple onChange ={this.bulkuplodaProductImages.bind(this)}/>\n                            <div>{this.getUploadBulUSPercentage()}</div>\n                          </div>\n                        </div>\n                        {\n                          this.state.progressLength === 100 ?\n                          <div className=\"col-lg-4  col-md-4 col-sm-12 col-xs-12\">\n                            <div className=\"form-group\">\n                              <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\">&nbsp; </label>\n                              <button className=\"btn btn-primary\" onClick={this.saveImages.bind(this)}>Save Images</button>\n                            </div>\n                          </div>\n                        :\n                        null\n                        }\n                        \n                      </div>\n                    </form>\n                     \n\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                      <div className=\"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-xs-12 col-sm-12 upldImgTextColor\">\n                        Image name must be saved in format <span className=\"upldImgTextColor1\">Your Item Code</span> - <span className=\"upldImgTextColor2\">Image Number for that product. </span>\n                        eg. ItemCode0-1, ItemCode0-2, ItemCode0-3, ... etc.\n                      </div>\n                      {\n                        this.state.progressLength === 0 || this.state.progressLength === 100 ?\n                        null\n                        :\n                        <div className=\"progress img-progress col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-xs-12 col-sm-12 NOpadding\">\n                          <div className=\"progress-bar col-lg-12 col-md-12 col-xs-12 col-sm-12\" role=\"progressbar\" style={{width:\"\"+this.state.progressLength+\"%\"}}>\n                            <span className=\"img-percent\">{this.state.progressLength}% Complete</span>\n                          </div>\n                        </div>\n                      }\n                      \n                      <div className=\"col-lg-12\">\n                        {\n                          this.state.notuploadedImages.length > 0 ?\n\n                            <div className=\"notBlkUplImgListOuter\">\n                              <div className=\"notBlkUplImgListTitle\">\n                                Images not Uploaded\n                              </div>\n                              {\n                                this.state.notuploadedImages.map((data, index)=>{\n                                  return (\n                                    <div className=\"notBlkUplImgList\" key={index}> \n                                      {data}\n                                    </div>\n                                  );\n                                })\n                              }\n                            </div>\n                          :\n\n                          \"\"\n                        } \n                      </div>\n                    </div>\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                      <div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                        <div>\n                          <div className=\"HRMSWrapper col-lg-12\">\n                            <table className=\"table iAssureITtable-bordered table-striped table-hover\">\n                              <thead className=\"tempTableHeader\">\n                                <tr >\n                                  <th className=\"col-lg-1 umDynamicHeader srpadd\">Sr no.</th>\n                                  <th className=\"col-lg-2 umDynamicHeader srpadd\">Item Code</th>\n                                  <th className=\"col-lg-2 umDynamicHeader srpadd\">Product Name</th>\n                                  <th className=\"col-lg-7 umDynamicHeader srpadd\">Images</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {  \n                                  this.state.allshopproductimages.map((data,index)=>{\n                                    {console.log(\"data.productImage = \",data.productImage)}\n                                    return(\n                                      <tr key ={index}>\n                                        <td> {index+1}     </td>\n                                        <td> {data.itemCode}    </td>\n                                        <td> {data.productName}    </td>\n                                        <td>\n                                        {\n                                          data.productImage.length > 0 ? \n                                            <div className=\"deleteimagewrapper bulkimagebg\">  \n                                              {  \n                                                data.productImage.map((imgdata,index)=>{\n                                                  return(\n                                                    <div className=\"col-lg-3 deleteImgBlkUpldCol-lg-3\" key={index}>\n                                                      <i className=\"fa fa-times deleteImgBlkUpld\" aria-hidden=\"true\" data-image={imgdata} data-productid={data._id}   onClick={this.deleteproductImages.bind(this)}></i>\n                                                      <img src={imgdata} className=\"img-thumbnail\"/>\n                                                    </div>\n                                                  );\n                                                })\n                                              }\n                                            </div>\n                                          :\n                                          <div className=\"bulkImgUpldNotShown\">\n                                            No Images Available\n                                          </div>\n                                        }\n                                        </td>\n                                      </tr> \n                                    )\n                                  })\n                                }   \n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n\n                </div>\n              </div>\n            </section>\n            </div>\n          </div>\n        </div>\n      </div>           \n    );\n  }\n}\nexport default BulkProductImageUpload ;"]},"metadata":{},"sourceType":"module"}