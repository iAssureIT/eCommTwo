{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/monthwiseCharts.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport PieChart from './PieChart.js';\nimport CenterWisePieChart from './CenterWisePieChart.js';\nimport './Chart.css';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nexport default class Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'year': \"FY 2019 - 2020\",\n      \"years\": [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"],\n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\": [],\n      \"annualPlanFamilyUpgradation\": [],\n      \"monthlyPlanReach\": [],\n      \"month\": [],\n      piechartcolor: [],\n      \"tableHeading\": {\n        name: \"Sector\",\n        annualPlan_Reach: \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation: \"anPlan_FamilyUpg\",\n        achievement_Reach: \"achie_Reach\",\n        achievement_FamilyUpgradation: \"achie_FamilyUpg\",\n        annualPlan_TotalBudget: \"annualPlan_TotalBudget\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => {});\n  }\n\n  getAvailableCenters() {\n    axios({\n      method: 'get',\n      url: '/api/centers/list'\n    }).then(response => {\n      this.setState({\n        availableCenters: response.data,\n        center: response.data[0].centerName + '|' + response.data[0]._id\n      }, () => {\n        var center_ID = this.state.center.split('|')[1];\n        this.setState({\n          center_ID: center_ID\n        }, () => {\n          this.getData(this.state.year, this.state.center_ID);\n          this.getCenterwiseData(this.state.year, this.state.center_ID);\n        });\n      });\n    }).catch(function (error) {});\n  }\n\n  selectCenter(event) {\n    var selectedCenter = event.target.value;\n    this.setState({\n      [event.target.name]: event.target.value,\n      selectedCenter: selectedCenter\n    }, () => {\n      var center_ID = this.state.selectedCenter.split('|')[1];\n      this.setState({\n        center_ID: center_ID\n      }, () => {\n        this.getData(this.state.year, this.state.center_ID);\n        this.getCenterwiseData(this.state.year, this.state.center_ID);\n      });\n    });\n  }\n\n  getData(year, center_ID) {\n    var startYear = year.substring(3, 7);\n    var endYear = year.substring(10, 15); // axios.get('/api/report/annual_completion_month/'+year+'/'+centerID)\n\n    if (startYear, endYear, center_ID) {\n      axios.get('/api/report/dashboard/' + startYear + '/' + endYear).then(response => {\n        var month = [];\n        var monthlyPlanReach = [];\n        var achievementReach = [];\n        var monthlyPlanTotalBudget = [];\n        var piechartcolor = [];\n\n        if (response.data && response.data.length > 0) {\n          response.data.map((data, index) => {\n            month.push(data.month);\n            monthlyPlanReach.push(data.monthlyPlan_Reach);\n            achievementReach.push(data.curr_achievement_Reach);\n            monthlyPlanTotalBudget.push(data.monthlyPlan_TotalBudget);\n            monthlyPlanTotalBudget.push(data.curr_achievement_TotalBudget);\n            piechartcolor.push(this.getRandomColor());\n          });\n          this.setState({\n            \"month\": month.splice(-2),\n            \"monthlyPlanReach1\": monthlyPlanReach.splice(-2),\n            \"achievementReach1\": achievementReach.splice(-2),\n            \"annualPlan_TotalBudget1\": monthlyPlanTotalBudget.splice(-2)\n          }, () => {\n            this.setState({\n              \"month\": month,\n              \"monthlyPlanReach\": monthlyPlanReach,\n              \"achievementReach\": achievementReach,\n              \"monthlyPlanTotalBudget\": monthlyPlanTotalBudget,\n              \"piechartcolor\": piechartcolor\n            }, () => {});\n          });\n        }\n\n        var tableData = response.data.map((a, i) => {\n          return {\n            month: a.month,\n            annualPlan_Reach: a.annualPlan_Reach,\n            achievement_Reach: a.achievement_Reach,\n            annualPlan_TotalBudget: a.annualPlan_TotalBudget\n          };\n        });\n        this.setState({\n          tableData: tableData\n        }, () => {});\n      }).catch(function (error) {});\n    }\n  }\n\n  getCenterwiseData(year, center_ID) {}\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Center\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"center\",\n      name: \"center\",\n      value: this.state.center,\n      onChange: this.selectCenter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"-- Select --\"), this.state.availableCenters && this.state.availableCenters.length > 0 ? this.state.availableCenters.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: data._id,\n        value: data.centerName + '|' + data._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 31\n        }\n      }, data.centerName);\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 56\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }\n    }, \"-- Select Year --\"), this.state.years.map((data, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }\n      }, data);\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IAssureTable, {\n      getData: this.getData.bind(this),\n      tableHeading: this.state.tableHeading,\n      tableData: this.state.tableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/monthwiseCharts.js"],"names":["React","Component","moment","$","axios","render","html2canvas","Chart","BarChart","PieChart","CenterWisePieChart","IAssureTable","Charts","constructor","props","state","piechartcolor","name","annualPlan_Reach","annualPlan_FamilyUpgradation","achievement_Reach","achievement_FamilyUpgradation","annualPlan_TotalBudget","componentDidMount","defaults","headers","common","localStorage","getItem","getAvailableCenters","getData","year","center_ID","getCenterwiseData","componentWillReceiveProps","nextProps","handleChange","event","preventDefault","setState","target","value","method","url","then","response","availableCenters","data","center","centerName","_id","split","catch","error","selectCenter","selectedCenter","startYear","substring","endYear","get","month","monthlyPlanReach","achievementReach","monthlyPlanTotalBudget","length","map","index","push","monthlyPlan_Reach","curr_achievement_Reach","monthlyPlan_TotalBudget","curr_achievement_TotalBudget","getRandomColor","splice","tableData","a","i","letters","color","Math","floor","random","bind","years","tableHeading"],"mappings":"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","sourcesContent":["import React, { Component }                                  from 'react';\nimport moment               from 'moment';\nimport $                                                     from 'jquery';\nimport axios                                                 from 'axios';\nimport { render } from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport BarChart from './BarChart.js';\nimport PieChart from './PieChart.js';\nimport CenterWisePieChart from './CenterWisePieChart.js';\nimport './Chart.css';\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\n\nexport default class Charts extends Component{\n  \n  constructor(props) {\n   super(props);\n    this.state = {\n      'year'                        : \"FY 2019 - 2020\",\n      \"years\"                       :[\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"],      \n      \"achievementFamilyUpgradation\": [],\n      \"achievementReach\"            : [],\n      \"annualPlanFamilyUpgradation\" : [],\n      \"monthlyPlanReach\"             : [],\n      \"month\"                      : [],\n      piechartcolor                 : [],\n      \"tableHeading\"                : {\n        name                                    : \"Sector\",\n        annualPlan_Reach                        : \"annPlan_Reach\",\n        annualPlan_FamilyUpgradation            : \"anPlan_FamilyUpg\",    \n        achievement_Reach                       : \"achie_Reach\",\n        achievement_FamilyUpgradation           : \"achie_FamilyUpg\",       \n        annualPlan_TotalBudget                  : \"annualPlan_TotalBudget\"     \n               \n      },\n\n\n    }\n  }\n\n  componentDidMount(){\n    axios.defaults.headers.common['Authorization'] = 'Bearer '+ localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n    this.getCenterwiseData(this.state.year, this.state.center_ID);\n  }\n    componentWillReceiveProps(nextProps){\n      this.getAvailableCenters();\n      this.getData(this.state.year, this.state.center_ID);\n      this.getCenterwiseData(this.state.year, this.state.center_ID);\n    }\n    handleChange(event){\n        event.preventDefault();\n        this.setState({\n          [event.target.name] : event.target.value\n        },()=>{\n        });\n    }\n    getAvailableCenters(){\n        axios({\n          method: 'get',\n          url: '/api/centers/list',\n        }).then((response)=> {\n          this.setState({\n            availableCenters : response.data,\n            center           : response.data[0].centerName+'|'+response.data[0]._id\n          },()=>{\n            var center_ID = this.state.center.split('|')[1];\n            this.setState({\n              center_ID        : center_ID\n            },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getCenterwiseData(this.state.year, this.state.center_ID);\n            })\n          })\n        }).catch(function (error) {\n        });\n    } \n    selectCenter(event){\n        var selectedCenter = event.target.value;\n        this.setState({\n          [event.target.name] : event.target.value,\n          selectedCenter : selectedCenter,\n        },()=>{\n          var center_ID = this.state.selectedCenter.split('|')[1];\n          this.setState({\n            center_ID :center_ID,            \n          },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            this.getCenterwiseData(this.state.year, this.state.center_ID);\n          })\n        });\n    } \n\n\n  getData(year, center_ID){\n    var startYear = year.substring(3, 7);\n    var endYear = year.substring(10, 15);\n    // axios.get('/api/report/annual_completion_month/'+year+'/'+centerID)\n    if(startYear, endYear, center_ID){\n        axios.get('/api/report/dashboard/'+startYear+'/'+endYear)\n        .then((response)=>{\n          var month = [];\n          var monthlyPlanReach = [];\n          var achievementReach = [];\n          var monthlyPlanTotalBudget = [];\n          var piechartcolor =[];\n         if(response.data&&response.data.length >0){\n            response.data.map((data,index)=>{\n              month.push(data.month);\n              monthlyPlanReach.push(data.monthlyPlan_Reach);\n              achievementReach.push(data.curr_achievement_Reach);\n              monthlyPlanTotalBudget.push(data.monthlyPlan_TotalBudget);\n              monthlyPlanTotalBudget.push(data.curr_achievement_TotalBudget);\n              piechartcolor.push(this.getRandomColor());\n            })\n          this.setState({\n            \"month\" : month.splice(-2),\n            \"monthlyPlanReach1\" : monthlyPlanReach.splice(-2),\n            \"achievementReach1\" : achievementReach.splice(-2),\n            \"annualPlan_TotalBudget1\" : monthlyPlanTotalBudget.splice(-2),\n          },()=>{\n             this.setState({\n              \"month\"                       : month,\n              \"monthlyPlanReach\"              : monthlyPlanReach,\n              \"achievementReach\"             : achievementReach,\n              \"monthlyPlanTotalBudget\"       : monthlyPlanTotalBudget,\n              \"piechartcolor\"                 : piechartcolor\n            },()=>{\n            });          \n          })\n        }    \n          var tableData = response.data.map((a, i)=>{\n            return {\n                month                                   : a.month,\n                annualPlan_Reach                        : a.annualPlan_Reach,\n                achievement_Reach                       : a.achievement_Reach,\n                annualPlan_TotalBudget                  : a.annualPlan_TotalBudget,            \n            } \n        })  \n        this.setState({\n          tableData : tableData\n        },()=>{\n        })\n      })\n      .catch(function(error){        \n      });\n    }\n  }\n\n  getCenterwiseData(year, center_ID){\n  }\n  getRandomColor(){\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render(){ \n    return(\n      <div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\">\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                <label className=\"formLable\">Center</label><span className=\"asterix\"></span>\n                <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"center\" >\n                    <select className=\"custom-select form-control inputBox\" ref=\"center\" name=\"center\" value={this.state.center} onChange={this.selectCenter.bind(this)} >\n                        <option className=\"hidden\" >-- Select --</option>\n                        {\n                          this.state.availableCenters && this.state.availableCenters.length >0 ?\n                          this.state.availableCenters.map((data, index)=>{\n                            return(\n                              <option key={data._id} value={data.centerName+'|'+data._id}>{data.centerName}</option>\n                            );\n                          })\n                          :\n                          null\n                        }\n                    </select>\n                </div>\n            </div>\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <label className=\"formLable\">Year</label><span className=\"asterix\"></span>\n              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"year\" >\n                <select className=\"custom-select form-control inputBox\" ref=\"year\" name=\"year\" value={this.state.year}  onChange={this.handleChange.bind(this)} >\n                 <option className=\"hidden\" >-- Select Year --</option>\n                 {\n                  this.state.years.map((data, i)=>{\n                    return <option key={i}>{data}</option>\n                  })\n                 }\n                </select>\n              </div>\n            </div>  \n        </div>  \n      \n        <div className=\"col-lg-6\">\n        <IAssureTable \n         \n          getData={this.getData.bind(this)} \n          tableHeading={this.state.tableHeading} \n          tableData={this.state.tableData} \n          />\n  \n        </div>\n      </div>  \n        <br/>\n        \n      </div>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}