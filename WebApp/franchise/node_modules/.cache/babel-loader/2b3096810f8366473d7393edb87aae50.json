{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/CenterwiseBarChart1.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios'; // import TrackerReact from 'meteor/ultimatejs:tracker-react';\n\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport CenterwiseBarChart from './CenterwiseBarChart.js';\nimport './Chart.css';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nexport default class CenterwiseBarChart1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'year': \"FY 2019 - 2020\",\n      \"years\": [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"],\n      \"per_cum_achi\": [],\n      \"cum_achi\": [],\n      \"cum_monthly\": [],\n      \"annualPlan\": [],\n      \"source\": [],\n      \"tableHeading\": {\n        name: \"Center\",\n        annualPlan_Reach: \"annualPlan_Reach\",\n        annualPlan_FamilyUpgradation: \"annualPlan_FamilyUpgradation\",\n        achievement_Reach: \"achievement_Reach\",\n        achievement_FamilyUpgradation: \"achievement_FamilyUpgradation\",\n        annualPlan_TotalBudget: \"annualPlan_TotalBudget\",\n        monthlyPlan_TotalBudget: \"monthlyPlan_TotalBudget\",\n        achievement_TotalBudget: \"achievement_TotalBudget\",\n        monthlyPlan_Total: \"monthlyPlan_Total\",\n        achievement_Total: \"achievement_Total\",\n        Per_Periodic: \"Per_Periodic\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => {});\n  }\n\n  getAvailableCenters() {\n    axios({\n      method: 'get',\n      url: '/api/centers/list'\n    }).then(response => {\n      this.setState({\n        availableCenters: response.data,\n        center: response.data[0].centerName + '|' + response.data[0]._id\n      }, () => {\n        var center_ID = this.state.center.split('|')[1];\n        this.setState({\n          center_ID: center_ID\n        }, () => {\n          this.getData(this.state.year, this.state.center_ID);\n        });\n      });\n    }).catch(function (error) {});\n  }\n\n  selectCenter(event) {\n    var selectedCenter = event.target.value;\n    this.setState({\n      [event.target.name]: event.target.value,\n      selectedCenter: selectedCenter\n    }, () => {\n      var center_ID = this.state.selectedCenter.split('|')[1];\n      this.setState({\n        center_ID: center_ID\n      }, () => {\n        this.getData(this.state.year, this.state.center_ID);\n      });\n    });\n  }\n\n  getData(year, center_ID) {\n    var startDate = year.substring(3, 7) + \"-04-01\";\n    var endDate = moment(new Date()).format(\"YYYY-MM-DD\");\n\n    if (startDate, endDate, center_ID) {\n      axios.get('/api/report/center/' + startDate + '/' + endDate + '/' + center_ID).then(response => {\n        var name = [];\n        var annualPlan_Reach = [];\n        var annualPlan_FamilyUpgradation = [];\n        var achievement_Reach = [];\n        var achievement_FamilyUpgradation = [];\n        var annualPlan_TotalBudget = [];\n        var monthlyPlan_Total = [];\n        var achievement_TotalBudget = [];\n        var monthlyPlan_TotalBudget = [];\n        var achievement_Total = [];\n        var Per_Periodic = [];\n\n        if (response.data && response.data.length > 0) {\n          response.data.map((data, index) => {\n            name.push(data.name);\n            annualPlan_Reach.push(data.annualPlan_Reach);\n            annualPlan_FamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n            achievement_Reach.push(data.achievement_Reach);\n            achievement_FamilyUpgradation.push(data.achievement_FamilyUpgradation);\n            annualPlan_TotalBudget.push(data.annualPlan_TotalBudget);\n            monthlyPlan_Total.push(data.monthlyPlan_Total);\n            achievement_TotalBudget.push(data.achievement_TotalBudget);\n            monthlyPlan_TotalBudget.push(data.monthlyPlan_TotalBudget);\n            achievement_Total.push(data.achievement_Total);\n            Per_Periodic.push(data.Per_Periodic);\n          });\n          this.setState({\n            \"name\": name.splice(-2),\n            \"annualPlan_Reach\": annualPlan_Reach.splice(-2),\n            \"annualPlan_FamilyUpgradation\": annualPlan_FamilyUpgradation.splice(-2),\n            \"achievement_Reach\": achievement_Reach.splice(-2),\n            \"achievement_FamilyUpgradation\": achievement_FamilyUpgradation.splice(-2),\n            \"annualPlan_TotalBudget\": annualPlan_TotalBudget.splice(-2),\n            \"monthlyPlan_Total\": monthlyPlan_Total.splice(-2),\n            \"achievement_TotalBudget\": achievement_TotalBudget.splice(-2),\n            \"monthlyPlan_TotalBudget\": monthlyPlan_TotalBudget.splice(-2),\n            \"achievement_Total\": achievement_Total.splice(-2),\n            \"Per_Periodic\": Per_Periodic.splice(-2)\n          }, () => {\n            this.setState({\n              \"name\": name,\n              \"annualPlan_Reach\": annualPlan_Reach,\n              \"annualPlan_FamilyUpgradation\": annualPlan_FamilyUpgradation,\n              \"achievement_Reach\": achievement_Reach,\n              \"achievement_FamilyUpgradation\": achievement_FamilyUpgradation,\n              \"annualPlan_TotalBudget\": annualPlan_TotalBudget,\n              \"monthlyPlan_Total\": monthlyPlan_Total,\n              \"achievement_TotalBudget\": achievement_TotalBudget,\n              \"monthlyPlan_TotalBudget\": monthlyPlan_TotalBudget,\n              \"achievement_Total\": achievement_Total,\n              \"Per_Periodic\": Per_Periodic\n            });\n          });\n        }\n\n        var tableData = response.data.map((a, i) => {\n          return {\n            name: a.name,\n            annualPlan_Reach: a.annualPlan_Reach,\n            annualPlan_FamilyUpgradation: a.annualPlan_FamilyUpgradation,\n            achievement_Reach: a.achievement_Reach,\n            achievement_FamilyUpgradation: a.achievement_FamilyUpgradation,\n            annualPlan_TotalBudget: a.annualPlan_TotalBudget,\n            monthlyPlan_TotalBudget: a.monthlyPlan_TotalBudget,\n            achievement_TotalBudget: a.achievement_TotalBudget,\n            monthlyPlan_Total: a.monthlyPlan_Total,\n            achievement_Total: a.achievement_Total,\n            Per_Periodic: a.Per_Periodic\n          };\n        });\n        this.setState({\n          tableData: tableData\n        }, () => {});\n      }).catch(function (error) {});\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \"Center\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"center\",\n      name: \"center\",\n      value: this.state.center,\n      onChange: this.selectCenter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, \"-- Select --\"), this.state.availableCenters && this.state.availableCenters.length > 0 ? this.state.availableCenters.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: data._id,\n        value: data.centerName + '|' + data._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 31\n        }\n      }, data.centerName);\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"formLable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asterix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 56\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 18\n      }\n    }, \"-- Select Year --\"), this.state.years.map((data, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 28\n        }\n      }, data);\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CenterwiseBarChart, {\n      center: this.state.name,\n      annualPlan_Reach: this.state.annualPlan_Reach,\n      annualPlan_FamilyUpgradation: this.state.annualPlan_FamilyUpgradation,\n      achievement_Reach: this.state.achievement_Reach,\n      achievement_FamilyUpgradation: this.state.achievement_FamilyUpgradation,\n      annualPlan_TotalBudget: this.state.annualPlan_TotalBudget,\n      monthlyPlan_Total: this.state.monthlyPlan_Total,\n      achievement_TotalBudget: this.state.achievement_TotalBudget,\n      monthlyPlan_TotalBudget: this.state.monthlyPlan_TotalBudget,\n      achievement_Total: this.state.achievement_Total,\n      Per_Periodic: this.state.Per_Periodic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IAssureTable, {\n      getData: this.getData.bind(this),\n      tableHeading: this.state.tableHeading,\n      tableData: this.state.tableData // tableObjects={this.state.tableObjects}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/coreadmin/dashboard/chart1/CenterwiseBarChart1.js"],"names":["React","Component","moment","$","axios","render","html2canvas","Chart","CenterwiseBarChart","IAssureTable","CenterwiseBarChart1","constructor","props","state","name","annualPlan_Reach","annualPlan_FamilyUpgradation","achievement_Reach","achievement_FamilyUpgradation","annualPlan_TotalBudget","monthlyPlan_TotalBudget","achievement_TotalBudget","monthlyPlan_Total","achievement_Total","Per_Periodic","componentDidMount","defaults","headers","common","localStorage","getItem","getAvailableCenters","getData","year","center_ID","componentWillReceiveProps","nextProps","handleChange","event","preventDefault","setState","target","value","method","url","then","response","availableCenters","data","center","centerName","_id","split","catch","error","selectCenter","selectedCenter","startDate","substring","endDate","Date","format","get","length","map","index","push","splice","tableData","a","i","bind","years","tableHeading"],"mappings":"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","sourcesContent":["import React, { Component }                                  from 'react';\nimport moment               from 'moment';\nimport $                                                     from 'jquery';\nimport axios                                                 from 'axios';\n// import TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { render } from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport html2canvas from 'html2canvas';\nimport Chart from 'chart.js';\nimport CenterwiseBarChart from './CenterwiseBarChart.js';\nimport './Chart.css';\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\n\nexport default class CenterwiseBarChart1 extends Component{\n  \n  constructor(props) {\n   super(props);\n    this.state = {\n      'year'                        : \"FY 2019 - 2020\",\n      \"years\"                       :[\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"],      \n      \"per_cum_achi\"        : [],\n      \"cum_achi\"            : [],\n      \"cum_monthly\"         : [],\n      \"annualPlan\"          : [],\n      \"source\"              : [],\n      \"tableHeading\"                : {\n        name                           : \"Center\",\n        annualPlan_Reach               : \"annualPlan_Reach\",\n        annualPlan_FamilyUpgradation   : \"annualPlan_FamilyUpgradation\",\n        achievement_Reach              : \"achievement_Reach\",\n        achievement_FamilyUpgradation  : \"achievement_FamilyUpgradation\",\n        annualPlan_TotalBudget         : \"annualPlan_TotalBudget\",\n        monthlyPlan_TotalBudget        : \"monthlyPlan_TotalBudget\",  \n        achievement_TotalBudget        : \"achievement_TotalBudget\",\n        monthlyPlan_Total              : \"monthlyPlan_Total\",\n        achievement_Total              : \"achievement_Total\",  \n        Per_Periodic  : \"Per_Periodic\", \n               \n      },\n\n\n    }\n  }\n\n  componentDidMount(){\n    axios.defaults.headers.common['Authorization'] = 'Bearer '+ localStorage.getItem(\"token\");\n    this.getAvailableCenters();\n    this.getData(this.state.year, this.state.center_ID);\n\n  }\n  \n    componentWillReceiveProps(nextProps){\n      this.getAvailableCenters();\n      this.getData(this.state.year, this.state.center_ID);\n    }\n    handleChange(event){\n        event.preventDefault();\n        this.setState({\n          [event.target.name] : event.target.value\n        },()=>{\n        });\n    }\n    getAvailableCenters(){\n        axios({\n          method: 'get',\n          url: '/api/centers/list',\n        }).then((response)=> {\n          this.setState({\n            availableCenters : response.data,\n            center           : response.data[0].centerName+'|'+response.data[0]._id\n          },()=>{\n            var center_ID = this.state.center.split('|')[1];\n            this.setState({\n              center_ID        : center_ID\n            },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n            })\n          })\n        }).catch(function (error) {\n        });\n    } \n    selectCenter(event){\n        var selectedCenter = event.target.value;\n        this.setState({\n          [event.target.name] : event.target.value,\n          selectedCenter : selectedCenter,\n        },()=>{\n          var center_ID = this.state.selectedCenter.split('|')[1];\n          this.setState({\n            center_ID :center_ID,            \n          },()=>{\n            this.getData(this.state.year, this.state.center_ID);\n          })\n        });\n    } \n\n\n \n  getData(year, center_ID){\n    var startDate = year.substring(3, 7)+\"-04-01\";\n    var endDate = moment(new Date()).format(\"YYYY-MM-DD\");\n    if(startDate, endDate, center_ID){\n        axios.get('/api/report/center/'+startDate+'/'+endDate+'/'+center_ID)\n        .then((response)=>{\n        var name                           = [];\n        var annualPlan_Reach               = [];\n        var annualPlan_FamilyUpgradation   = [];\n        var achievement_Reach              = [];\n        var achievement_FamilyUpgradation  = [];\n        var annualPlan_TotalBudget         = [];\n        var monthlyPlan_Total              = [];\n        var achievement_TotalBudget        = [];\n        var monthlyPlan_TotalBudget        = [];\n        var achievement_Total              = [];\n        var Per_Periodic                   = [];\n        \n        \n          if(response.data&&response.data.length >0){\n            response.data.map((data,index)=>{\n              name.push(data.name);\n              annualPlan_Reach.push(data.annualPlan_Reach);\n              annualPlan_FamilyUpgradation.push(data.annualPlan_FamilyUpgradation);\n              achievement_Reach.push(data.achievement_Reach);\n              achievement_FamilyUpgradation.push(data.achievement_FamilyUpgradation);\n              annualPlan_TotalBudget.push(data.annualPlan_TotalBudget);\n              monthlyPlan_Total.push(data.monthlyPlan_Total);\n              achievement_TotalBudget.push(data.achievement_TotalBudget);\n              monthlyPlan_TotalBudget.push(data.monthlyPlan_TotalBudget);\n              achievement_Total.push(data.achievement_Total);\n              Per_Periodic.push(data.Per_Periodic);\n            })\n          this.setState({\n            \"name\"               : name.splice(-2),\n            \"annualPlan_Reach\"               : annualPlan_Reach.splice(-2),\n            \"annualPlan_FamilyUpgradation\"   : annualPlan_FamilyUpgradation.splice(-2),\n            \"achievement_Reach\"              : achievement_Reach.splice(-2),\n            \"achievement_FamilyUpgradation\"  : achievement_FamilyUpgradation.splice(-2),\n            \"annualPlan_TotalBudget\"         : annualPlan_TotalBudget.splice(-2),\n            \"monthlyPlan_Total\"              : monthlyPlan_Total.splice(-2),\n            \"achievement_TotalBudget\"        : achievement_TotalBudget.splice(-2),\n            \"monthlyPlan_TotalBudget\"        : monthlyPlan_TotalBudget.splice(-2),\n            \"achievement_Total\"              : achievement_Total.splice(-2),\n            \"Per_Periodic\"                   : Per_Periodic.splice(-2),\n          \n          },()=>{\n            this.setState({\n              \"name\"                           : name,\n              \"annualPlan_Reach\"               : annualPlan_Reach,\n              \"annualPlan_FamilyUpgradation\"   : annualPlan_FamilyUpgradation,\n              \"achievement_Reach\"              : achievement_Reach,\n              \"achievement_FamilyUpgradation\"  : achievement_FamilyUpgradation,\n              \"annualPlan_TotalBudget\"         : annualPlan_TotalBudget,\n              \"monthlyPlan_Total\"              : monthlyPlan_Total,\n              \"achievement_TotalBudget\"        : achievement_TotalBudget,\n              \"monthlyPlan_TotalBudget\"        : monthlyPlan_TotalBudget,\n              \"achievement_Total\"              : achievement_Total,\n              \"Per_Periodic\"                   : Per_Periodic,\n            });      \n          })\n        }\n        var tableData = response.data.map((a, i)=>{\n            return {\n              name                           : a.name,\n              annualPlan_Reach               : a.annualPlan_Reach,\n              annualPlan_FamilyUpgradation   : a.annualPlan_FamilyUpgradation,\n              achievement_Reach              : a.achievement_Reach,\n              achievement_FamilyUpgradation  : a.achievement_FamilyUpgradation,\n              annualPlan_TotalBudget         : a.annualPlan_TotalBudget,\n              monthlyPlan_TotalBudget        : a.monthlyPlan_TotalBudget,\n              achievement_TotalBudget        : a.achievement_TotalBudget,\n              monthlyPlan_Total              : a.monthlyPlan_Total,\n              achievement_Total              : a.achievement_Total,\n              Per_Periodic                   : a.Per_Periodic,\n            } \n        })  \n        this.setState({\n          tableData : tableData\n        },()=>{\n        })\n      })\n      .catch(function(error){        \n      });\n    }\n  }\n\n  render(){ \n    \n    return(\n      <div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 marginTop11\">\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                <label className=\"formLable\">Center</label><span className=\"asterix\"></span>\n                <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"center\" >\n                    <select className=\"custom-select form-control inputBox\" ref=\"center\" name=\"center\" value={this.state.center} onChange={this.selectCenter.bind(this)} >\n                        <option className=\"hidden\" >-- Select --</option>\n                        {\n                          this.state.availableCenters && this.state.availableCenters.length >0 ?\n                          this.state.availableCenters.map((data, index)=>{\n                            return(\n                              <option key={data._id} value={data.centerName+'|'+data._id}>{data.centerName}</option>\n                            );\n                          })\n                          :\n                          null\n                        }\n                    </select>\n                </div>\n            </div>\n            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <label className=\"formLable\">Year</label><span className=\"asterix\"></span>\n              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"year\" >\n                <select className=\"custom-select form-control inputBox\" ref=\"year\" name=\"year\" value={this.state.year}  onChange={this.handleChange.bind(this)} >\n                 <option className=\"hidden\" >-- Select Year --</option>\n                 {\n                  this.state.years.map((data, i)=>{\n                    return <option key={i}>{data}</option>\n                  })\n                 }\n                </select>\n              </div>\n            </div>  \n        </div>  \n        <div className=\"col-lg-6\">\n          <CenterwiseBarChart \n            center                         ={this.state.name}\n            annualPlan_Reach               ={this.state.annualPlan_Reach}\n            annualPlan_FamilyUpgradation   ={this.state.annualPlan_FamilyUpgradation}\n            achievement_Reach              ={this.state.achievement_Reach}\n            achievement_FamilyUpgradation  ={this.state.achievement_FamilyUpgradation}\n            annualPlan_TotalBudget         ={this.state.annualPlan_TotalBudget}\n            monthlyPlan_Total              ={this.state.monthlyPlan_Total}\n            achievement_TotalBudget        ={this.state.achievement_TotalBudget}\n            monthlyPlan_TotalBudget        ={this.state.monthlyPlan_TotalBudget}\n            achievement_Total              ={this.state.achievement_Total}\n            Per_Periodic                   ={this.state.Per_Periodic}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <IAssureTable \n         \n          getData={this.getData.bind(this)} \n          tableHeading={this.state.tableHeading} \n          tableData={this.state.tableData} \n          // tableObjects={this.state.tableObjects}\n          />\n  \n        </div>\n     \n      </div>  \n        <br/>\n        \n      </div>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}