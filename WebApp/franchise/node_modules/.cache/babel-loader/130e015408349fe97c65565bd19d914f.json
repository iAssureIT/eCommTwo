{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/MonthlyReport.js\";\nimport React, { Component } from 'react';\nimport IAssureTable from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios from 'axios';\nexport default class MonthlyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"twoLevelHeader\": {\n        apply: false\n      },\n      \"tableHeading\": {\n        orderID: \"Order ID\",\n        cratedAt: \"Order Date\",\n        userFullName: \"Customer Name\",\n        totalAmount: \"Amount\",\n        deliveryStatus: \"Delivery Status\"\n      },\n      \"tableData\": [],\n      \"tableObjects\": {\n        apiLink: '/api/annualPlans/',\n        editUrl: '/Plan/',\n        paginationApply: true\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      fields: {},\n      errors: {},\n      selectedYearMonth: '',\n      selectedMonth: '',\n      startDate: '',\n      endDate: '',\n      dataCount: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedYearMonth: moment().format('Y') + '-' + moment().format('M'),\n      startDate: moment().startOf('month').format('YYYY-MM-DD'),\n      endDate: moment().endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      console.log('month', this.state.selectedYearMonth);\n      console.log('startDate', this.state.startDate);\n      console.log('endDate', this.state.endDate);\n      this.getCount();\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reportData) {\n      this.setState({\n        reportData: nextProps.reportData\n      });\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  getCount() {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report-count\", formvalues).then(response => {\n      this.setState({\n        dataCount: response.data.dataCount\n      }, () => {});\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getData(startRange, limitRange) {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report/\" + startRange + '/' + limitRange, formvalues).then(response => {\n      this.setState({\n        tableData: response.data\n      }, () => {\n        console.log(\"tableData\", this.state.tableData);\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  currentMonth() {\n    var d = new Date();\n    var currentMonth = d.getFullYear() + ' - ' + d.getMonth();\n    return currentMonth;\n  }\n\n  previousMonth(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).subtract(1, 'month').startOf('month').format('YYYY-MM-DD');\n    this.setState({\n      selectedYearMonth: moment(startDate).format('Y') + '-' + moment(startDate).format('M'),\n      startDate: startDate,\n      endDate: moment(startDate).endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  nextMonth(event) {\n    event.preventDefault();\n    var startDate = moment(this.state.startDate).add(1, 'months').startOf('month').format('YYYY-MM-DD');\n    this.setState({\n      selectedYearMonth: moment(startDate).format('Y') + '-' + moment(startDate).format('M'),\n      startDate: startDate,\n      endDate: moment(startDate).endOf('month').format('YYYY-MM-DD')\n    }, () => {\n      console.log('month', this.state.selectedYearMonth);\n      console.log('startDate', this.state.startDate);\n      console.log('endDate', this.state.endDate);\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  dataTableList() {// var monthDateFromSess = Session.get(\"selectedMonth\");\n    //       var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));//Find out first day of month with selectedMonth\n    //       var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n    // var reportData = [];\n    //       if(this.props.selectedCategory){\n    //           if(this.props.selectedSubCategory){\n    //               reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }else{\n    //               reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }\n    //       }else{\n    //           reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n    //       }\n    // this.setState({\n    //           reportData : reportData\n    //       });\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    console.log(searchText, startRange, limitRange);\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    if (!this.props.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sales-report-main-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxmain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxsec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 33\n        }\n      }, \"Monthly Reports\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.previousMonth.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-left\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 155\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChange,\n        value: this.state.selectedYearMonth,\n        name: \"inputmonthlyValue\",\n        type: \"text\",\n        className: \"inputmonthlyValue reportsDateRef form-control\",\n        placeholder: \"\",\n        \"aria-label\": \"Brand\",\n        \"aria-describedby\": \"basic-addon1\",\n        ref: \"inputmonthlyValue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.nextMonth.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-right\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 151\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-list-downloadMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IAssureTable, {\n        tableHeading: this.state.tableHeading,\n        twoLevelHeader: this.state.twoLevelHeader,\n        dataCount: this.state.dataCount,\n        tableData: this.state.tableData,\n        getData: this.getData.bind(this),\n        tableObjects: this.state.tableObjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"ldrImageforbulk\",\n        src: \"/images/Loadersglms.gif\",\n        alt: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 110\n        }\n      }));\n    }\n  }\n\n} // export default MonthlyListContainer = withTracker(props =>{\n//     var monthDateFromSess = Session.get(\"selectedMonth\");\n//     var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));\n//     var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsMonthlyList);","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/MonthlyReport.js"],"names":["React","Component","IAssureTable","moment","$","axios","MonthlyReport","constructor","props","state","apply","orderID","cratedAt","userFullName","totalAmount","deliveryStatus","apiLink","editUrl","paginationApply","fields","errors","selectedYearMonth","selectedMonth","startDate","endDate","dataCount","handleChange","bind","componentDidMount","setState","format","startOf","endOf","console","log","getCount","getData","startRange","limitRange","componentWillReceiveProps","nextProps","reportData","event","preventDefault","target","name","value","formvalues","post","then","response","data","catch","error","tableData","currentMonth","d","Date","getFullYear","getMonth","previousMonth","subtract","nextMonth","add","dataTableList","getSearchText","searchText","render","loading","tableHeading","twoLevelHeader","tableObjects"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IAssureTable           from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport moment from 'moment';\nimport $ from 'jquery';\nimport axios                  from 'axios';\n\n\nexport default class MonthlyReport extends Component{\n\tconstructor(props){\n        super(props); \n        this.state = {\n           \"twoLevelHeader\"     : {\n            apply               : false,\n          },\n          \"tableHeading\"        : {\n            orderID                    : \"Order ID\",\n            cratedAt                   : \"Order Date\",\n            userFullName               : \"Customer Name\",\n            totalAmount                : \"Amount\",\n            deliveryStatus             : \"Delivery Status\",\n\n          },\n          \"tableData\"           : [],\n          \"tableObjects\"        : {\n            apiLink             : '/api/annualPlans/',\n            editUrl             : '/Plan/',\n            paginationApply     : true,\n          },\n          \"startRange\"          : 0,\n          \"limitRange\"          : 10,\n          fields                : {},\n          errors                : {},\n          selectedYearMonth     : '',\n          selectedMonth         : '',\n          startDate             : '',\n          endDate               : '',\n          dataCount             : 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n\n    componentDidMount(){\n        \n        this.setState({\n            selectedYearMonth : moment().format('Y')+'-'+moment().format('M'),\n            startDate   : moment().startOf('month').format('YYYY-MM-DD'),\n            endDate     : moment().endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            console.log('month',this.state.selectedYearMonth);\n            console.log('startDate',this.state.startDate);\n            console.log('endDate',this.state.endDate);\n            this.getCount();\n            this.getData(this.state.startRange, this.state.limitRange )    \n        })  \n        \n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.reportData){\n            this.setState({\n                reportData : nextProps.reportData\n            });\n        }\n    }\n    handleChange(event){\n    event.preventDefault();\n       const target = event.target;\n       const name = target.name;\n\n       this.setState({\n           [name] : event.target.value,\n       });\n    }\n    getCount(){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n        axios.post(\"/api/orders/get/report-count\", formvalues)\n        .then((response)=>{\n          this.setState({ \n            dataCount : response.data.dataCount\n          },()=>{ \n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    getData(startRange,limitRange){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n        axios.post(\"/api/orders/get/report/\"+startRange+'/'+limitRange, formvalues)\n        .then((response)=>{\n          this.setState({ \n            tableData : response.data\n          },()=>{ \n            console.log(\"tableData\",this.state.tableData);\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    currentMonth(){\n        var d = new Date();\n        var currentMonth = d.getFullYear()+' - '+d.getMonth();\n\t\treturn currentMonth;\n\t}\n\n\tpreviousMonth(event){\n\t\tevent.preventDefault();\n        var startDate = moment(this.state.startDate).subtract(1, 'month').startOf('month').format('YYYY-MM-DD');\n        \n\t\tthis.setState({\n            selectedYearMonth : moment(startDate).format('Y')+'-'+moment(startDate).format('M'),\n            startDate   : startDate,\n            endDate     : moment(startDate).endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            this.getData(this.state.startRange, this.state.limitRange )    \n        }) \n\t}\n\n\tnextMonth(event){\n\t\tevent.preventDefault();\n        var startDate = moment(this.state.startDate).add(1, 'months').startOf('month').format('YYYY-MM-DD');\n        \n        this.setState({\n            selectedYearMonth : moment(startDate).format('Y')+'-'+moment(startDate).format('M'),\n            startDate   : startDate,\n            endDate     : moment(startDate).endOf('month').format('YYYY-MM-DD')\n            },\n            ()=>{\n            console.log('month',this.state.selectedYearMonth);\n            console.log('startDate',this.state.startDate);\n            console.log('endDate',this.state.endDate);\n            this.getData(this.state.startRange, this.state.limitRange )    \n        }) \n\t}\n   \n\n\n    dataTableList(){\n\t\t// var monthDateFromSess = Session.get(\"selectedMonth\");\n\n  //       var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));//Find out first day of month with selectedMonth\n  //       var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n\n\t\t// var reportData = [];\n  //       if(this.props.selectedCategory){\n  //           if(this.props.selectedSubCategory){\n  //               reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }else{\n  //               reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }\n  //       }else{\n  //           reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n  //       }\n\t\t// this.setState({\n  //           reportData : reportData\n  //       });\n    }\n    \n    \n    getSearchText(searchText, startRange, limitRange){\n        console.log(searchText, startRange, limitRange);\n        this.setState({\n            tableData : []\n        });\n    }\n    render(){\n        if(!this.props.loading){\n            return( \n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div className=\"sales-report-main-class\">\n                        <div className=\"reports-select-date-boxmain\">\n                            <div className=\"reports-select-date-boxsec\">\n                                <div className=\"reports-select-date-Title\">Monthly Reports</div>\n                                <div className=\"input-group\">\n                                    <span onClick={this.previousMonth.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i></span>\n                                    <input onChange={this.handleChange}  value={this.state.selectedYearMonth} name=\"inputmonthlyValue\" type=\"text\" className=\"inputmonthlyValue reportsDateRef form-control\" placeholder=\"\" aria-label=\"Brand\" aria-describedby=\"basic-addon1\" ref=\"inputmonthlyValue\"  />\n                                    <span onClick={this.nextMonth.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i></span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"report-list-downloadMain\">\n                            <IAssureTable \n                                tableHeading={this.state.tableHeading}\n                                twoLevelHeader={this.state.twoLevelHeader} \n                                dataCount={this.state.dataCount}\n                                tableData={this.state.tableData}\n                                getData={this.getData.bind(this)}\n                                tableObjects={this.state.tableObjects}\n                            />\n                            \n                        </div>\n                    </div>\n                </div>            \n            );\n        }else{\n            return(\n                <div className=\"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\"><img className=\"ldrImageforbulk\" src=\"/images/Loadersglms.gif\" alt=\"loading\"/></div>\n            );\n        } \n    }\n}\n// export default MonthlyListContainer = withTracker(props =>{\n//     var monthDateFromSess = Session.get(\"selectedMonth\");\n//     var monthDateStart = new Date(moment(monthDateFromSess).month(\"YYYY-MM\"));\n//     var monthDateToEnd = new Date(moment(monthDateFromSess).add(1,\"M\"));\n\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : monthDateStart, $lt : monthDateToEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsMonthlyList);"]},"metadata":{},"sourceType":"module"}