{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/CustomisedReport.js\";\nimport React, { Component } from 'react';\nimport IAssureTable from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport $ from 'jquery';\nimport axios from 'axios';\nimport moment from 'moment';\nexport default class CustomisedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"twoLevelHeader\": {\n        apply: false\n      },\n      \"tableHeading\": {\n        orderID: \"Order ID\",\n        cratedAt: \"Order Date\",\n        userFullName: \"Customer Name\",\n        totalAmount: \"Amount\",\n        deliveryStatus: \"Delivery Status\"\n      },\n      \"tableData\": [],\n      \"tableObjects\": {\n        apiLink: '/api/annualPlans/',\n        editUrl: '/Plan/',\n        paginationApply: true\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      fields: {},\n      errors: {},\n      startDate: '',\n      endDate: '',\n      dataCount: 0\n    };\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      startDate: moment().subtract(1, 'week').format('YYYY-MM-DD'),\n      endDate: moment().format('YYYY-MM-DD')\n    }, () => {\n      this.getCount();\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reportData) {\n      this.setState({\n        reportData: nextProps.reportData\n      });\n    }\n  }\n\n  getCount() {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report-count\", formvalues).then(response => {\n      this.setState({\n        dataCount: response.data.dataCount\n      }, () => {});\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getData(startRange, limitRange) {\n    var formvalues = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    axios.post(\"/api/orders/get/report/\" + startRange + '/' + limitRange, formvalues).then(response => {\n      this.setState({\n        tableData: response.data\n      }, () => {\n        console.log(\"tableData\", this.state.tableData);\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  handleFromChange(event) {\n    event.preventDefault();\n    this.setState({\n      startDate: moment(event.target.value).format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  handleToChange(event) {\n    event.preventDefault();\n    this.setState({\n      endDate: moment(event.target.value).format('YYYY-MM-DD')\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n  }\n\n  currentFromDate() {// if(Session.get('newFromDate')){\n    //     var today = Session.get('newFromDate');\n    // } else {\n    //     var today = new Date();\n    // }\n    // var dd = today.getDate();\n    // var mm = today.getMonth()+1; //January is 0!\n    // var yyyy = today.getFullYear();\n    // if(dd<10){\n    //     dd='0'+dd;\n    // }\n    // if(mm<10){\n    //     mm='0'+mm;\n    // }\n    // var today = yyyy+'-'+mm+'-'+dd;\n    // var today = yyyy+'-'+mm+'-'+dd;\n    // return today;\n  }\n\n  currentToDate() {// if(Session.get('newToDate')){\n    //     var today = Session.get('newToDate');\n    // } else {\n    //     var today = new Date();\n    // }\n    // // var today = new Date();\n    // var dd = today.getDate();\n    // var mm = today.getMonth()+1; //January is 0!\n    // var yyyy = today.getFullYear();\n    // if(dd<10){\n    //     dd='0'+dd;\n    // }\n    // if(mm<10){\n    //     mm='0'+mm;\n    // }\n    // var today = yyyy+'-'+mm+'-'+dd;\n    // var today = yyyy+'-'+mm+'-'+dd;\n    // return today;\n  }\n\n  dataTableList() {//       var selectedDateFrom = Session.get('newFromDate');\n    // if(selectedDateFrom){\n    // \tvar newDateFrom  = new Date(selectedDateFrom);\n    // }else{\n    // \tvar newDateFrom  = new Date();\n    // }\n    //       var selectedDateTo = Session.get('newToDate');\n    // if(selectedDateTo){\n    // \tvar newDateTo  = new Date(selectedDateTo);\n    // }else{\n    // \tvar newDateTo  = new Date();\n    //       }\n    // var reportData = [];\n    //       if(this.props.selectedCategory){\n    //           if(this.props.selectedSubCategory){\n    //               reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }else{\n    //               reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }\n    //       }else{\n    //           reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n    //       }\n    //       this.setState({\n    //           reportData : reportData\n    //       });\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    console.log(searchText, startRange, limitRange);\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    if (!this.props.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sales-report-main-class\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxmain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-boxsec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      }, \"Customized Sales Report\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-fromto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-from1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-from2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 41\n        }\n      }, \"From\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-from3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleFromChange,\n        name: \"fromDateCustomised\",\n        ref: \"fromDateCustomised\",\n        value: this.state.startDate,\n        type: \"date\",\n        className: \"reportsDateRef form-control\",\n        placeholder: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-to1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-to2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }\n      }, \"To\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reports-select-date-to3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleToChange,\n        name: \"toDateCustomised\",\n        ref: \"toDateCustomised\",\n        value: this.state.endDate,\n        type: \"date\",\n        className: \"reportsDateRef form-control\",\n        placeholder: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 45\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-list-downloadMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IAssureTable, {\n        tableHeading: this.state.tableHeading,\n        twoLevelHeader: this.state.twoLevelHeader,\n        dataCount: this.state.dataCount,\n        tableData: this.state.tableData,\n        getData: this.getData.bind(this),\n        tableObjects: this.state.tableObjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"ldrImageforbulk\",\n        src: \"/images/Loadersglms.gif\",\n        alt: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 110\n        }\n      }));\n    }\n  }\n\n} // CustomisedList = withTracker(props =>{\n//     var selectedDateFrom = Session.get('newFromDate');\n//     if(selectedDateFrom){\n//         var newDateFrom  = new Date(selectedDateFrom);\n//     }else{\n//         var newDateFrom  = new Date();\n//     }\n//     var selectedDateTo = Session.get('newToDate');\n//     if(selectedDateTo){\n//         var newDateTo  = new Date(selectedDateTo);\n//     }else{\n//         var newDateTo  = new Date();\n//     }\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsCustomisedList);","map":{"version":3,"sources":["/home/iassureit/PriyaiAssureITWork/eCommTwo/WebApp/franchise/src/admin/Reports/CustomisedReport.js"],"names":["React","Component","IAssureTable","$","axios","moment","CustomisedReport","constructor","props","state","apply","orderID","cratedAt","userFullName","totalAmount","deliveryStatus","apiLink","editUrl","paginationApply","fields","errors","startDate","endDate","dataCount","handleFromChange","bind","handleToChange","componentDidMount","setState","subtract","format","getCount","getData","startRange","limitRange","componentWillReceiveProps","nextProps","reportData","formvalues","post","then","response","data","catch","error","console","log","tableData","event","preventDefault","target","value","currentFromDate","currentToDate","dataTableList","getSearchText","searchText","render","loading","tableHeading","twoLevelHeader","tableObjects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAiC,+CAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,gBAAN,SAA+BL,SAA/B,CAAwC;AACtDM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACX,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACP,wBAAuB;AACzBC,QAAAA,KAAK,EAAiB;AADG,OADhB;AAIX,sBAAwB;AACtBC,QAAAA,OAAO,EAAsB,UADP;AAEtBC,QAAAA,QAAQ,EAAqB,YAFP;AAGtBC,QAAAA,YAAY,EAAiB,eAHP;AAItBC,QAAAA,WAAW,EAAkB,QAJP;AAKtBC,QAAAA,cAAc,EAAe;AALP,OAJb;AAYX,mBAAwB,EAZb;AAaX,sBAAwB;AACtBC,QAAAA,OAAO,EAAe,mBADA;AAEtBC,QAAAA,OAAO,EAAe,QAFA;AAGtBC,QAAAA,eAAe,EAAO;AAHA,OAbb;AAkBX,oBAAwB,CAlBb;AAmBX,oBAAwB,EAnBb;AAoBXC,MAAAA,MAAM,EAAkB,EApBb;AAqBXC,MAAAA,MAAM,EAAkB,EArBb;AAsBXC,MAAAA,SAAS,EAAe,EAtBb;AAuBXC,MAAAA,OAAO,EAAiB,EAvBb;AAwBXC,MAAAA,SAAS,EAAe;AAxBb,KAAb;AA2BA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AAEDE,EAAAA,iBAAiB,GAAE;AAEf,SAAKC,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAGhB,MAAM,GAAGwB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BC,MAA7B,CAAoC,YAApC,CADF;AAEVR,MAAAA,OAAO,EAAKjB,MAAM,GAAGyB,MAAT,CAAgB,YAAhB;AAFF,KAAd,EAGE,MAAI;AACF,WAAKC,QAAL;AACA,WAAKC,OAAL,CAAa,KAAKvB,KAAL,CAAWwB,UAAxB,EAAoC,KAAKxB,KAAL,CAAWyB,UAA/C;AACH,KAND;AAQH;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,UAAb,EAAwB;AACpB,WAAKT,QAAL,CAAc;AACVS,QAAAA,UAAU,EAAGD,SAAS,CAACC;AADb,OAAd;AAGH;AACJ;;AACDN,EAAAA,QAAQ,GAAE;AACN,QAAIO,UAAU,GAAG;AACfjB,MAAAA,SAAS,EAAG,KAAKZ,KAAL,CAAWY,SADR;AAEfC,MAAAA,OAAO,EAAK,KAAKb,KAAL,CAAWa;AAFR,KAAjB;AAIAlB,IAAAA,KAAK,CAACmC,IAAN,CAAW,8BAAX,EAA2CD,UAA3C,EACCE,IADD,CACOC,QAAD,IAAY;AAChB,WAAKb,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAGkB,QAAQ,CAACC,IAAT,CAAcnB;AADd,OAAd,EAEE,MAAI,CACL,CAHD;AAID,KAND,EAOCoB,KAPD,CAOQC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH,KATD;AAUH;;AACDZ,EAAAA,OAAO,CAACC,UAAD,EAAYC,UAAZ,EAAuB;AAC1B,QAAII,UAAU,GAAG;AACfjB,MAAAA,SAAS,EAAG,KAAKZ,KAAL,CAAWY,SADR;AAEfC,MAAAA,OAAO,EAAK,KAAKb,KAAL,CAAWa;AAFR,KAAjB;AAIAlB,IAAAA,KAAK,CAACmC,IAAN,CAAW,4BAA0BN,UAA1B,GAAqC,GAArC,GAAyCC,UAApD,EAAgEI,UAAhE,EACCE,IADD,CACOC,QAAD,IAAY;AAChB,WAAKb,QAAL,CAAc;AACZmB,QAAAA,SAAS,EAAGN,QAAQ,CAACC;AADT,OAAd,EAEE,MAAI;AACJG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKrC,KAAL,CAAWsC,SAAnC;AACD,OAJD;AAKD,KAPD,EAQCJ,KARD,CAQQC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH,KAVD;AAWH;;AACDpB,EAAAA,gBAAgB,CAACwB,KAAD,EAAO;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACG,SAAKrB,QAAL,CAAc;AACTP,MAAAA,SAAS,EAAGhB,MAAM,CAAC2C,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAN,CAA2BrB,MAA3B,CAAkC,YAAlC;AADH,KAAd,EAEG,MAAI;AACF,WAAKE,OAAL,CAAa,KAAKvB,KAAL,CAAWwB,UAAxB,EAAoC,KAAKxB,KAAL,CAAWyB,UAA/C;AACH,KAJF;AAKF;;AACDR,EAAAA,cAAc,CAACsB,KAAD,EAAO;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACG,SAAKrB,QAAL,CAAc;AACTN,MAAAA,OAAO,EAAGjB,MAAM,CAAC2C,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAN,CAA2BrB,MAA3B,CAAkC,YAAlC;AADD,KAAd,EAEG,MAAI;AACF,WAAKE,OAAL,CAAa,KAAKvB,KAAL,CAAWwB,UAAxB,EAAoC,KAAKxB,KAAL,CAAWyB,UAA/C;AACH,KAJF;AAKF;;AAEDkB,EAAAA,eAAe,GAAE,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AAEDC,EAAAA,aAAa,GAAE,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AAEDC,EAAAA,aAAa,GAAE,CAGjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;AAEDC,EAAAA,aAAa,CAACC,UAAD,EAAavB,UAAb,EAAyBC,UAAzB,EAAoC;AAC7CW,IAAAA,OAAO,CAACC,GAAR,CAAYU,UAAZ,EAAwBvB,UAAxB,EAAoCC,UAApC;AACA,SAAKN,QAAL,CAAc;AACVmB,MAAAA,SAAS,EAAG;AADF,KAAd;AAGH;;AACDU,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKjD,KAAL,CAAWkD,OAAf,EAAuB;AACnB,0BACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,QAAQ,EAAE,KAAKlC,gBAAtB;AAAwC,QAAA,IAAI,EAAC,oBAA7C;AAAkE,QAAA,GAAG,EAAC,oBAAtE;AACA,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWY,SADlB;AAC6B,QAAA,IAAI,EAAC,MADlC;AACyC,QAAA,SAAS,EAAC,6BADnD;AACiF,QAAA,WAAW,EAAC,EAD7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,eAUI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,QAAQ,EAAE,KAAKK,cAAtB;AAAsC,QAAA,IAAI,EAAC,kBAA3C;AAA8D,QAAA,GAAG,EAAC,kBAAlE;AACA,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWa,OADlB;AAC2B,QAAA,IAAI,EAAC,MADhC;AACuC,QAAA,SAAS,EAAC,6BADjD;AAC+E,QAAA,WAAW,EAAC,EAD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAVJ,CAFJ,CADJ,CADJ,eA2BI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AACI,QAAA,YAAY,EAAE,KAAKb,KAAL,CAAWkD,YAD7B;AAEI,QAAA,cAAc,EAAE,KAAKlD,KAAL,CAAWmD,cAF/B;AAGI,QAAA,SAAS,EAAE,KAAKnD,KAAL,CAAWc,SAH1B;AAII,QAAA,SAAS,EAAE,KAAKd,KAAL,CAAWsC,SAJ1B;AAKI,QAAA,OAAO,EAAE,KAAKf,OAAL,CAAaP,IAAb,CAAkB,IAAlB,CALb;AAMI,QAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWoD,YAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA3BJ,CADJ,CADJ;AA2CH,KA5CD,MA4CK;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,6EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6F;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAC,yBAArC;AAA+D,QAAA,GAAG,EAAC,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7F,CADJ;AAGH;AACJ;;AA1OkD,C,CA4OvD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport IAssureTable         from \"../../coreadmin/IAssureTable/IAssureTable.jsx\";\nimport $ from 'jquery';\nimport axios                  from 'axios';\nimport moment from 'moment';\n\nexport default class CustomisedReport extends Component{\n\tconstructor(props){\n        super(props);\n        this.state = {\n              \"twoLevelHeader\"     : {\n            apply               : false,\n          },\n          \"tableHeading\"        : {\n            orderID                    : \"Order ID\",\n            cratedAt                   : \"Order Date\",\n            userFullName               : \"Customer Name\",\n            totalAmount                : \"Amount\",\n            deliveryStatus             : \"Delivery Status\",\n\n          },\n          \"tableData\"           : [],\n          \"tableObjects\"        : {\n            apiLink             : '/api/annualPlans/',\n            editUrl             : '/Plan/',\n            paginationApply     : true,\n          },\n          \"startRange\"          : 0,\n          \"limitRange\"          : 10,\n          fields                : {},\n          errors                : {},\n          startDate             : '',\n          endDate               : '',\n          dataCount             : 0\n            \n        }\n        this.handleFromChange = this.handleFromChange.bind(this);\n        this.handleToChange = this.handleToChange.bind(this);\n        \n    }\n\n    componentDidMount(){\n        \n        this.setState({\n            startDate : moment().subtract(1, 'week').format('YYYY-MM-DD'),\n            endDate   : moment().format('YYYY-MM-DD')\n        },()=>{\n            this.getCount();\n            this.getData(this.state.startRange, this.state.limitRange )\n        })\n        \n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.reportData){\n            this.setState({\n                reportData : nextProps.reportData\n            });\n        }\n    }\n    getCount(){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n        axios.post(\"/api/orders/get/report-count\", formvalues)\n        .then((response)=>{\n          this.setState({ \n            dataCount : response.data.dataCount\n          },()=>{ \n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    getData(startRange,limitRange){\n        var formvalues = {\n          startDate : this.state.startDate,\n          endDate   : this.state.endDate\n        }\n        axios.post(\"/api/orders/get/report/\"+startRange+'/'+limitRange, formvalues)\n        .then((response)=>{\n          this.setState({ \n            tableData : response.data\n          },()=>{ \n            console.log(\"tableData\",this.state.tableData);\n          })\n        })\n        .catch((error)=>{\n            console.log('error', error);\n        })\n    }\n    handleFromChange(event){\n    event.preventDefault();\n       this.setState({\n            startDate : moment(event.target.value).format('YYYY-MM-DD')\n        },()=>{\n            this.getData(this.state.startRange, this.state.limitRange )\n        })\n    }\n    handleToChange(event){\n    event.preventDefault();\n       this.setState({\n            endDate : moment(event.target.value).format('YYYY-MM-DD')\n        },()=>{\n            this.getData(this.state.startRange, this.state.limitRange )\n        })\n    }\n\n    currentFromDate(){\n        // if(Session.get('newFromDate')){\n        //     var today = Session.get('newFromDate');\n        // } else {\n        //     var today = new Date();\n        // }\n        // var dd = today.getDate();\n        // var mm = today.getMonth()+1; //January is 0!\n        // var yyyy = today.getFullYear();\n        // if(dd<10){\n        //     dd='0'+dd;\n        // }\n        // if(mm<10){\n        //     mm='0'+mm;\n        // }\n        // var today = yyyy+'-'+mm+'-'+dd;\n        // var today = yyyy+'-'+mm+'-'+dd;\n\n        // return today;\n    }\n\n    currentToDate(){\n        // if(Session.get('newToDate')){\n        //     var today = Session.get('newToDate');\n        // } else {\n        //     var today = new Date();\n        // }\n        // // var today = new Date();\n        // var dd = today.getDate();\n        // var mm = today.getMonth()+1; //January is 0!\n        // var yyyy = today.getFullYear();\n        // if(dd<10){\n        //     dd='0'+dd;\n        // }\n        // if(mm<10){\n        //     mm='0'+mm;\n        // }\n        // var today = yyyy+'-'+mm+'-'+dd;\n        // var today = yyyy+'-'+mm+'-'+dd;\n\n        // return today;\n    }\n\n    dataTableList(){\n\t\t\n        \n  //       var selectedDateFrom = Session.get('newFromDate');\n\t\t// if(selectedDateFrom){\n\t\t// \tvar newDateFrom  = new Date(selectedDateFrom);\n\t\t// }else{\n\t\t// \tvar newDateFrom  = new Date();\n\t\t// }\n\n  //       var selectedDateTo = Session.get('newToDate');\n\t\t// if(selectedDateTo){\n\t\t// \tvar newDateTo  = new Date(selectedDateTo);\n\t\t// }else{\n\t\t// \tvar newDateTo  = new Date();\n  //       }\n        \n\t\t// var reportData = [];\n  //       if(this.props.selectedCategory){\n  //           if(this.props.selectedSubCategory){\n  //               reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }else{\n  //               reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }\n  //       }else{\n  //           reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n  //       }\n  //       this.setState({\n  //           reportData : reportData\n  //       });\n    }\n   \n    getSearchText(searchText, startRange, limitRange){\n        console.log(searchText, startRange, limitRange);\n        this.setState({\n            tableData : []\n        });\n    }\n    render(){\n        if(!this.props.loading){\n            return( \n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div className=\"sales-report-main-class\">\n                        <div className=\"reports-select-date-boxmain\">\n                            <div className=\"reports-select-date-boxsec\">\n                                <div className=\"reports-select-date-Title\">Customized Sales Report</div>\n                                <div className=\"reports-select-date-fromto\">\n                                    <div className=\"reports-select-date-from1\">\n                                        <div className=\"reports-select-date-from2\">\n                                            From\n                                        </div>\n                                        <div className=\"reports-select-date-from3\">\n                                            <input onChange={this.handleFromChange} name=\"fromDateCustomised\" ref=\"fromDateCustomised\" \n                                            value={this.state.startDate} type=\"date\" className=\"reportsDateRef form-control\" placeholder=\"\"  />\n                                        </div>\n                                    </div>\n                                    <div className=\"reports-select-date-to1\">\n                                        <div className=\"reports-select-date-to2\">\n                                            To\n                                        </div>\n                                        <div className=\"reports-select-date-to3\">\n                                            <input onChange={this.handleToChange} name=\"toDateCustomised\" ref=\"toDateCustomised\" \n                                            value={this.state.endDate} type=\"date\" className=\"reportsDateRef form-control\" placeholder=\"\"   />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"report-list-downloadMain\">\n                            <IAssureTable \n                                tableHeading={this.state.tableHeading}\n                                twoLevelHeader={this.state.twoLevelHeader} \n                                dataCount={this.state.dataCount}\n                                tableData={this.state.tableData}\n                                getData={this.getData.bind(this)}\n                                tableObjects={this.state.tableObjects}\n                            />\n                        </div>\n                    </div>\n                </div>\n                \n            );\n        }else{\n            return(\n                <div className=\"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg LoaderDiv\"><img className=\"ldrImageforbulk\" src=\"/images/Loadersglms.gif\" alt=\"loading\"/></div>\n            );\n        }\n    }\n}\n// CustomisedList = withTracker(props =>{\n//     var selectedDateFrom = Session.get('newFromDate');\n//     if(selectedDateFrom){\n//         var newDateFrom  = new Date(selectedDateFrom);\n//     }else{\n//         var newDateFrom  = new Date();\n//     }\n\n//     var selectedDateTo = Session.get('newToDate');\n//     if(selectedDateTo){\n//         var newDateTo  = new Date(selectedDateTo);\n//     }else{\n//         var newDateTo  = new Date();\n//     }\n        \n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : newDateFrom, $lt : newDateTo }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n// return{\n//     loading,\n//     reportData,\n// };\n// })(CategoryWiseReportsCustomisedList);"]},"metadata":{},"sourceType":"module"}